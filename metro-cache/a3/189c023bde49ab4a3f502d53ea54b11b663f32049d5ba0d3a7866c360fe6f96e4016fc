{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-is","data":{"isAsync":false}},{"name":"@react-navigation/routers","data":{"isAsync":false}},{"name":"./NavigationStateContext","data":{"isAsync":false}},{"name":"./NavigationRouteContext","data":{"isAsync":false}},{"name":"./Screen","data":{"isAsync":false}},{"name":"./useEventEmitter","data":{"isAsync":false}},{"name":"./useRegisterNavigator","data":{"isAsync":false}},{"name":"./useDescriptors","data":{"isAsync":false}},{"name":"./useNavigationHelpers","data":{"isAsync":false}},{"name":"./useOnAction","data":{"isAsync":false}},{"name":"./useFocusEvents","data":{"isAsync":false}},{"name":"./useOnRouteFocus","data":{"isAsync":false}},{"name":"./useChildActionListeners","data":{"isAsync":false}},{"name":"./useFocusedListeners","data":{"isAsync":false}},{"name":"./useFocusedListenersChildrenAdapter","data":{"isAsync":false}},{"name":"./types","data":{"isAsync":false}},{"name":"./useStateGetters","data":{"isAsync":false}},{"name":"./useOnGetState","data":{"isAsync":false}},{"name":"./useScheduleUpdate","data":{"isAsync":false}},{"name":"./useCurrentRender","data":{"isAsync":false}},{"name":"./isArrayEqual","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = useNavigationBuilder;\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"react\"));\n\n  var _reactIs = _$$_REQUIRE(_dependencyMap[7], \"react-is\");\n\n  var _routers = _$$_REQUIRE(_dependencyMap[8], \"@react-navigation/routers\");\n\n  var _NavigationStateContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./NavigationStateContext\"));\n\n  var _NavigationRouteContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./NavigationRouteContext\"));\n\n  var _Screen = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./Screen\"));\n\n  var _useEventEmitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./useEventEmitter\"));\n\n  var _useRegisterNavigator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./useRegisterNavigator\"));\n\n  var _useDescriptors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./useDescriptors\"));\n\n  var _useNavigationHelpers = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./useNavigationHelpers\"));\n\n  var _useOnAction = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./useOnAction\"));\n\n  var _useFocusEvents = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./useFocusEvents\"));\n\n  var _useOnRouteFocus = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"./useOnRouteFocus\"));\n\n  var _useChildActionListeners = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"./useChildActionListeners\"));\n\n  var _useFocusedListeners2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"./useFocusedListeners\"));\n\n  var _useFocusedListenersChildrenAdapter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21], \"./useFocusedListenersChildrenAdapter\"));\n\n  var _types = _$$_REQUIRE(_dependencyMap[22], \"./types\");\n\n  var _useStateGetters2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./useStateGetters\"));\n\n  var _useOnGetState = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24], \"./useOnGetState\"));\n\n  var _useScheduleUpdate = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25], \"./useScheduleUpdate\"));\n\n  var _useCurrentRender = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26], \"./useCurrentRender\"));\n\n  var _isArrayEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27], \"./isArrayEqual\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  _types.PrivateValueStore;\n\n  var getRouteConfigsFromChildren = function getRouteConfigsFromChildren(children) {\n    var configs = React.Children.toArray(children).reduce(function (acc, child) {\n      if (React.isValidElement(child)) {\n        if (child.type === _Screen.default) {\n          acc.push(child.props);\n          return acc;\n        }\n\n        if (child.type === React.Fragment) {\n          acc.push.apply(acc, (0, _toConsumableArray2.default)(getRouteConfigsFromChildren(child.props.children)));\n          return acc;\n        }\n      }\n\n      throw new Error(\"A navigator can only contain 'Screen' components as its direct children (found '\" + (child.type && child.type.name ? child.type.name : String(child)) + \"')\");\n    }, []);\n\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(function (config) {\n        var _ref = config,\n            name = _ref.name,\n            children = _ref.children,\n            component = _ref.component;\n\n        if (typeof name !== 'string' || !name) {\n          throw new Error(\"Got an invalid name (\" + JSON.stringify(name) + \") for the screen. It must be a non-empty string.\");\n        }\n\n        if (children != null || component !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(\"Got both 'component' and 'children' props for the screen '\" + name + \"'. You must pass only one of them.\");\n          }\n\n          if (children != null && typeof children !== 'function') {\n            throw new Error(\"Got an invalid value for 'children' prop for the screen '\" + name + \"'. It must be a function returning a React Element.\");\n          }\n\n          if (component !== undefined && !(0, _reactIs.isValidElementType)(component)) {\n            throw new Error(\"Got an invalid value for 'component' prop for the screen '\" + name + \"'. It must be a valid React Component.\");\n          }\n\n          if (typeof component === 'function' && component.name === 'component') {\n            console.warn(\"Looks like you're passing an inline function for 'component' prop for the screen '\" + name + \"' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.\");\n          }\n        } else {\n          throw new Error(\"Couldn't find a 'component' or 'children' prop for the screen '\" + name + \"'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.\");\n        }\n      });\n    }\n\n    return configs;\n  };\n\n  function useNavigationBuilder(createRouter, options) {\n    var _route$params3;\n\n    var navigatorKey = (0, _useRegisterNavigator.default)();\n    var route = React.useContext(_NavigationRouteContext.default);\n    var previousNestedParamsRef = React.useRef(route == null ? void 0 : route.params);\n    React.useEffect(function () {\n      previousNestedParamsRef.current = route == null ? void 0 : route.params;\n    }, [route]);\n    var children = options.children,\n        rest = (0, _objectWithoutProperties2.default)(options, [\"children\"]);\n\n    var _React$useRef = React.useRef(createRouter(_objectSpread(_objectSpread({}, rest), (route == null ? void 0 : route.params) && route.params.initial !== false && typeof route.params.screen === 'string' ? {\n      initialRouteName: route.params.screen\n    } : null))),\n        router = _React$useRef.current;\n\n    var routeConfigs = getRouteConfigsFromChildren(children);\n    var screens = routeConfigs.reduce(function (acc, config) {\n      if (config.name in acc) {\n        throw new Error(\"A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '\" + config.name + \"')\");\n      }\n\n      acc[config.name] = config;\n      return acc;\n    }, {});\n    var routeNames = routeConfigs.map(function (config) {\n      return config.name;\n    });\n    var routeParamList = routeNames.reduce(function (acc, curr) {\n      var _route$params, _route$params2;\n\n      var initialParams = screens[curr].initialParams;\n      var initialParamsFromParams = (route == null ? void 0 : (_route$params = route.params) == null ? void 0 : _route$params.initial) !== false && (route == null ? void 0 : (_route$params2 = route.params) == null ? void 0 : _route$params2.screen) === curr ? route.params.params : undefined;\n      acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? _objectSpread(_objectSpread({}, initialParams), initialParamsFromParams) : undefined;\n      return acc;\n    }, {});\n\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n\n    var isStateValid = React.useCallback(function (state) {\n      return state.type === undefined || state.type === router.type;\n    }, [router.type]);\n    var isStateInitialized = React.useCallback(function (state) {\n      return state !== undefined && state.stale === false && isStateValid(state);\n    }, [isStateValid]);\n\n    var _React$useContext = React.useContext(_NavigationStateContext.default),\n        currentState = _React$useContext.state,\n        getCurrentState = _React$useContext.getState,\n        setState = _React$useContext.setState,\n        setKey = _React$useContext.setKey,\n        getKey = _React$useContext.getKey;\n\n    var _React$useMemo = React.useMemo(function () {\n      if (currentState === undefined || !isStateValid(currentState)) {\n        return [router.getInitialState({\n          routeNames: routeNames,\n          routeParamList: routeParamList\n        }), true];\n      } else {\n        return [router.getRehydratedState(currentState, {\n          routeNames: routeNames,\n          routeParamList: routeParamList\n        }), false];\n      }\n    }, [currentState, router, isStateValid]),\n        _React$useMemo2 = (0, _slicedToArray2.default)(_React$useMemo, 2),\n        initializedState = _React$useMemo2[0],\n        isFirstStateInitialization = _React$useMemo2[1];\n\n    var state = isStateInitialized(currentState) ? currentState : initializedState;\n    var nextState = state;\n\n    if (!(0, _isArrayEqual.default)(state.routeNames, routeNames)) {\n      nextState = router.getStateForRouteNamesChange(state, {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      });\n    }\n\n    if (typeof (route == null ? void 0 : (_route$params3 = route.params) == null ? void 0 : _route$params3.screen) === 'string' && (route.params !== previousNestedParamsRef.current || route.params.initial === false && isFirstStateInitialization)) {\n      var updatedState = router.getStateForAction(nextState, _routers.CommonActions.navigate(route.params.screen, route.params.params), {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      });\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      }) : nextState;\n    }\n\n    var shouldUpdate = state !== nextState;\n    (0, _useScheduleUpdate.default)(function () {\n      if (shouldUpdate) {\n        setState(nextState);\n      }\n    });\n    state = nextState;\n    React.useEffect(function () {\n      setKey(navigatorKey);\n      return function () {\n        setTimeout(function () {\n          if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n            setState(undefined);\n          }\n        }, 0);\n      };\n    }, []);\n    var initializedStateRef = React.useRef();\n    initializedStateRef.current = initializedState;\n    var getState = React.useCallback(function () {\n      var currentState = getCurrentState();\n      return isStateInitialized(currentState) ? currentState : initializedStateRef.current;\n    }, [getCurrentState, isStateInitialized]);\n    var emitter = (0, _useEventEmitter.default)(function (e) {\n      var _ref2;\n\n      var routeNames = [];\n      var route;\n\n      if (e.target) {\n        var _route;\n\n        route = state.routes.find(function (route) {\n          return route.key === e.target;\n        });\n\n        if ((_route = route) == null ? void 0 : _route.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push.apply(routeNames, (0, _toConsumableArray2.default)(Object.keys(screens).filter(function (name) {\n          var _route2;\n\n          return ((_route2 = route) == null ? void 0 : _route2.name) === name;\n        })));\n      }\n\n      if (route == null) {\n        return;\n      }\n\n      var navigation = descriptors[route.key].navigation;\n\n      var listeners = (_ref2 = []).concat.apply(_ref2, (0, _toConsumableArray2.default)(routeNames.map(function (name) {\n        var listeners = screens[name].listeners;\n        var map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation: navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(function (type) {\n          return type === e.type;\n        }).map(function (type) {\n          return map == null ? void 0 : map[type];\n        }) : undefined;\n      }))).filter(function (cb, i, self) {\n        return cb && self.lastIndexOf(cb) === i;\n      });\n\n      listeners.forEach(function (listener) {\n        return listener == null ? void 0 : listener(e);\n      });\n    });\n    (0, _useFocusEvents.default)({\n      state: state,\n      emitter: emitter\n    });\n    React.useEffect(function () {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state: state\n        }\n      });\n    }, [emitter, state]);\n\n    var _useChildActionListen = (0, _useChildActionListeners.default)(),\n        actionListeners = _useChildActionListen.listeners,\n        addActionListener = _useChildActionListen.addListener;\n\n    var _useFocusedListeners = (0, _useFocusedListeners2.default)(),\n        focusedListeners = _useFocusedListeners.listeners,\n        addFocusedListener = _useFocusedListeners.addListener;\n\n    var _useStateGetters = (0, _useStateGetters2.default)(),\n        getStateForRoute = _useStateGetters.getStateForRoute,\n        addStateGetter = _useStateGetters.addStateGetter;\n\n    var onAction = (0, _useOnAction.default)({\n      router: router,\n      getState: getState,\n      setState: setState,\n      key: route == null ? void 0 : route.key,\n      listeners: actionListeners,\n      routerConfigOptions: {\n        routeNames: routeNames,\n        routeParamList: routeParamList\n      }\n    });\n    var onRouteFocus = (0, _useOnRouteFocus.default)({\n      router: router,\n      key: route == null ? void 0 : route.key,\n      getState: getState,\n      setState: setState\n    });\n    var navigation = (0, _useNavigationHelpers.default)({\n      onAction: onAction,\n      getState: getState,\n      emitter: emitter,\n      router: router\n    });\n    (0, _useFocusedListenersChildrenAdapter.default)({\n      navigation: navigation,\n      focusedListeners: focusedListeners\n    });\n    (0, _useOnGetState.default)({\n      getState: getState,\n      getStateForRoute: getStateForRoute\n    });\n    var descriptors = (0, _useDescriptors.default)({\n      state: state,\n      screens: screens,\n      navigation: navigation,\n      screenOptions: options.screenOptions,\n      onAction: onAction,\n      getState: getState,\n      setState: setState,\n      onRouteFocus: onRouteFocus,\n      addActionListener: addActionListener,\n      addFocusedListener: addFocusedListener,\n      addStateGetter: addStateGetter,\n      router: router,\n      emitter: emitter\n    });\n    (0, _useCurrentRender.default)({\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors\n    });\n    return {\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors\n    };\n  }\n});","lineCount":371,"map":[[19,0,1,0],[21,0,2,0],[23,0,3,0],[25,0,14,0],[27,0,15,0],[29,0,16,0],[31,0,17,0],[33,0,18,0],[35,0,19,0],[37,0,20,0],[39,0,21,0],[41,0,22,0],[43,0,23,0],[45,0,24,0],[47,0,25,0],[49,0,26,0],[51,0,27,0],[53,0,34,0],[55,0,35,0],[57,0,36,0],[59,0,37,0],[61,0,38,0],[67,0,42,0,"PrivateValueStore"],[69,0,58,0],[69,6,58,6,"getRouteConfigsFromChildren"],[69,33,58,33],[69,36,58,36],[69,45,58,6,"getRouteConfigsFromChildren"],[69,72,58,36],[69,73,63,2,"children"],[69,81,58,36],[69,83,64,5],[70,0,65,2],[70,8,65,8,"configs"],[70,15,65,15],[70,18,65,18,"React"],[70,23,65,23],[70,24,65,24,"Children"],[70,32,65,18],[70,33,65,33,"toArray"],[70,40,65,18],[70,41,65,41,"children"],[70,49,65,18],[70,51,65,51,"reduce"],[70,57,65,18],[70,58,67,4],[70,68,67,5,"acc"],[70,71,67,4],[70,73,67,10,"child"],[70,78,67,4],[70,80,67,20],[71,0,68,4],[71,10,68,8,"React"],[71,15,68,13],[71,16,68,14,"isValidElement"],[71,30,68,8],[71,31,68,29,"child"],[71,36,68,8],[71,37,68,4],[71,39,68,37],[72,0,69,6],[72,12,69,10,"child"],[72,17,69,15],[72,18,69,16,"type"],[72,22,69,10],[72,27,69,25,"Screen"],[72,42,69,6],[72,44,69,33],[73,0,72,8,"acc"],[73,10,72,8,"acc"],[73,13,72,11],[73,14,72,12,"push"],[73,18,72,8],[73,19,73,10,"child"],[73,24,73,15],[73,25,73,16,"props"],[73,30,72,8],[74,0,81,8],[74,17,81,15,"acc"],[74,20,81,8],[75,0,82,7],[77,0,84,6],[77,12,84,10,"child"],[77,17,84,15],[77,18,84,16,"type"],[77,22,84,10],[77,27,84,25,"React"],[77,32,84,30],[77,33,84,31,"Fragment"],[77,41,84,6],[77,43,84,41],[78,0,87,8,"acc"],[78,10,87,8,"acc"],[78,13,87,11],[78,14,87,12,"push"],[78,18,87,8],[78,25,87,8,"acc"],[78,28,87,11],[78,63,88,13,"getRouteConfigsFromChildren"],[78,90,88,40],[78,91,89,12,"child"],[78,96,89,17],[78,97,89,18,"props"],[78,102,89,12],[78,103,89,24,"children"],[78,111,88,40],[78,112,87,11],[78,114,87,8],[79,0,92,8],[79,17,92,15,"acc"],[79,20,92,8],[80,0,93,7],[81,0,94,5],[83,0,96,4],[83,12,96,10],[83,16,96,14,"Error"],[83,21,96,10],[83,108,99,8,"child"],[83,113,99,13],[83,114,99,14,"type"],[83,118,99,8],[83,122,99,22,"child"],[83,127,99,27],[83,128,99,28,"type"],[83,132,99,22],[83,133,99,33,"name"],[83,137,99,8],[83,140,99,40,"child"],[83,145,99,45],[83,146,99,46,"type"],[83,150,99,40],[83,151,99,51,"name"],[83,155,99,8],[83,158,99,58,"String"],[83,164,99,64],[83,165,99,65,"child"],[83,170,99,64],[83,171,96,10],[83,180,96,4],[84,0,102,3],[84,5,65,18],[84,7,102,5],[84,9,65,18],[84,10,65,2],[86,0,104,2],[86,8,104,6,"process"],[86,15,104,13],[86,16,104,14,"env"],[86,19,104,6],[86,20,104,18,"NODE_ENV"],[86,28,104,6],[86,33,104,31],[86,45,104,2],[86,47,104,45],[87,0,105,4,"configs"],[87,6,105,4,"configs"],[87,13,105,11],[87,14,105,12,"forEach"],[87,21,105,4],[87,22,105,20],[87,32,105,21,"config"],[87,38,105,20],[87,40,105,32],[88,0,105,32],[88,19,106,44,"config"],[88,25,105,32],[89,0,105,32],[89,12,106,14,"name"],[89,16,105,32],[89,24,106,14,"name"],[89,28,105,32],[90,0,105,32],[90,12,106,20,"children"],[90,20,105,32],[90,28,106,20,"children"],[90,36,105,32],[91,0,105,32],[91,12,106,30,"component"],[91,21,105,32],[91,29,106,30,"component"],[91,38,105,32],[93,0,108,6],[93,12,108,10],[93,19,108,17,"name"],[93,23,108,10],[93,28,108,26],[93,36,108,10],[93,40,108,38],[93,41,108,39,"name"],[93,45,108,6],[93,47,108,45],[94,0,109,8],[94,16,109,14],[94,20,109,18,"Error"],[94,25,109,14],[94,52,110,34,"JSON"],[94,56,110,38],[94,57,110,39,"stringify"],[94,66,110,34],[94,67,111,12,"name"],[94,71,110,34],[94,72,109,14],[94,126,109,8],[95,0,114,7],[97,0,116,6],[97,12,116,10,"children"],[97,20,116,18],[97,24,116,22],[97,28,116,10],[97,32,116,30,"component"],[97,41,116,39],[97,46,116,44,"undefined"],[97,55,116,6],[97,57,116,55],[98,0,117,8],[98,14,117,12,"children"],[98,22,117,20],[98,26,117,24],[98,30,117,12],[98,34,117,32,"component"],[98,43,117,41],[98,48,117,46,"undefined"],[98,57,117,8],[98,59,117,57],[99,0,118,10],[99,18,118,16],[99,22,118,20,"Error"],[99,27,118,16],[99,91,119,73,"name"],[99,95,118,16],[99,135,118,10],[100,0,121,9],[102,0,123,8],[102,14,123,12,"children"],[102,22,123,20],[102,26,123,24],[102,30,123,12],[102,34,123,32],[102,41,123,39,"children"],[102,49,123,32],[102,54,123,52],[102,64,123,8],[102,66,123,64],[103,0,124,10],[103,18,124,16],[103,22,124,20,"Error"],[103,27,124,16],[103,90,125,72,"name"],[103,94,124,16],[103,151,124,10],[104,0,127,9],[106,0,129,8],[106,14,129,12,"component"],[106,23,129,21],[106,28,129,26,"undefined"],[106,37,129,12],[106,41,129,39],[106,42,129,40],[106,75,129,59,"component"],[106,84,129,40],[106,85,129,8],[106,87,129,71],[107,0,130,10],[107,18,130,16],[107,22,130,20,"Error"],[107,27,130,16],[107,91,131,73,"name"],[107,95,130,16],[107,139,130,10],[108,0,133,9],[110,0,135,8],[110,14,135,12],[110,21,135,19,"component"],[110,30,135,12],[110,35,135,33],[110,45,135,12],[110,49,135,47,"component"],[110,58,135,56],[110,59,135,57,"name"],[110,63,135,47],[110,68,135,66],[110,79,135,8],[110,81,135,79],[111,0,139,10,"console"],[111,12,139,10,"console"],[111,19,139,17],[111,20,139,18,"warn"],[111,24,139,10],[111,112,140,97,"name"],[111,116,139,10],[112,0,142,9],[113,0,143,7],[113,9,116,6],[113,15,143,13],[114,0,144,8],[114,16,144,14],[114,20,144,18,"Error"],[114,25,144,14],[114,94,145,76,"name"],[114,98,144,14],[114,283,144,8],[115,0,147,7],[116,0,148,5],[116,7,105,4],[117,0,149,3],[119,0,151,2],[119,11,151,9,"configs"],[119,18,151,2],[120,0,152,1],[120,3,58,0],[122,0,161,15],[122,11,161,24,"useNavigationBuilder"],[122,31,161,15],[122,32,167,2,"createRouter"],[122,44,161,15],[122,46,168,2,"options"],[122,53,161,15],[122,55,169,2],[123,0,169,2],[125,0,170,2],[125,8,170,8,"navigatorKey"],[125,20,170,20],[125,23,170,23],[125,59,170,2],[126,0,172,2],[126,8,172,8,"route"],[126,13,172,13],[126,16,172,16,"React"],[126,21,172,21],[126,22,172,22,"useContext"],[126,32,172,16],[126,33,172,33,"NavigationRouteContext"],[126,64,172,16],[126,65,172,2],[127,0,176,2],[127,8,176,8,"previousNestedParamsRef"],[127,31,176,31],[127,34,176,34,"React"],[127,39,176,39],[127,40,176,40,"useRef"],[127,46,176,34],[127,47,176,47,"route"],[127,52,176,34],[127,72,176,47,"route"],[127,77,176,52],[127,78,176,54,"params"],[127,84,176,34],[127,85,176,2],[128,0,178,2,"React"],[128,4,178,2,"React"],[128,9,178,7],[128,10,178,8,"useEffect"],[128,19,178,2],[128,20,178,18],[128,32,178,24],[129,0,179,4,"previousNestedParamsRef"],[129,6,179,4,"previousNestedParamsRef"],[129,29,179,27],[129,30,179,28,"current"],[129,37,179,4],[129,40,179,38,"route"],[129,45,179,4],[129,65,179,38,"route"],[129,70,179,43],[129,71,179,45,"params"],[129,77,179,4],[130,0,180,3],[130,5,178,2],[130,7,180,5],[130,8,180,6,"route"],[130,13,180,5],[130,14,178,2],[131,0,169,2],[131,8,182,10,"children"],[131,16,169,2],[131,19,182,32,"options"],[131,26,169,2],[131,27,182,10,"children"],[131,35,169,2],[132,0,169,2],[132,8,182,23,"rest"],[132,12,169,2],[132,54,182,32,"options"],[132,61,169,2],[134,0,169,2],[134,24,183,30,"React"],[134,29,183,35],[134,30,183,36,"useRef"],[134,36,183,30],[134,37,184,4,"createRouter"],[134,49,184,16],[134,82,185,11,"rest"],[134,86,184,16],[134,89,186,10],[134,90,186,10,"route"],[134,95,186,15],[134,103,186,10],[134,115,186,10,"route"],[134,120,186,15],[134,121,186,17,"params"],[134,127,186,10],[134,132,187,6,"route"],[134,137,187,11],[134,138,187,12,"params"],[134,144,187,6],[134,145,187,19,"initial"],[134,152,187,6],[134,157,187,31],[134,162,186,10],[134,166,188,6],[134,173,188,13,"route"],[134,178,188,18],[134,179,188,19,"params"],[134,185,188,13],[134,186,188,26,"screen"],[134,192,188,6],[134,197,188,37],[134,205,186,10],[134,208,189,10],[135,0,189,12,"initialRouteName"],[135,6,189,12,"initialRouteName"],[135,22,189,28],[135,24,189,30,"route"],[135,29,189,35],[135,30,189,36,"params"],[135,36,189,30],[135,37,189,43,"screen"],[136,0,189,10],[136,5,186,10],[136,8,190,10],[136,12,184,16],[136,14,183,30],[136,15,169,2],[137,0,169,2],[137,8,183,19,"router"],[137,14,169,2],[137,31,183,10,"current"],[137,38,169,2],[139,0,194,2],[139,8,194,8,"routeConfigs"],[139,20,194,20],[139,23,194,23,"getRouteConfigsFromChildren"],[139,50,194,50],[139,51,198,4,"children"],[139,59,194,50],[139,60,194,2],[140,0,200,2],[140,8,200,8,"screens"],[140,15,200,15],[140,18,200,18,"routeConfigs"],[140,30,200,30],[140,31,200,31,"reduce"],[140,37,200,18],[140,38,205,4],[140,48,205,5,"acc"],[140,51,205,4],[140,53,205,10,"config"],[140,59,205,4],[140,61,205,21],[141,0,206,4],[141,10,206,8,"config"],[141,16,206,14],[141,17,206,15,"name"],[141,21,206,8],[141,25,206,23,"acc"],[141,28,206,4],[141,30,206,28],[142,0,207,6],[142,14,207,12],[142,18,207,16,"Error"],[142,23,207,12],[142,135,208,117,"config"],[142,141,208,123],[142,142,208,124,"name"],[142,146,207,12],[142,154,207,6],[143,0,210,5],[145,0,212,4,"acc"],[145,6,212,4,"acc"],[145,9,212,7],[145,10,212,8,"config"],[145,16,212,14],[145,17,212,15,"name"],[145,21,212,7],[145,22,212,4],[145,25,212,23,"config"],[145,31,212,4],[146,0,213,4],[146,13,213,11,"acc"],[146,16,213,4],[147,0,214,3],[147,5,200,18],[147,7,214,5],[147,9,200,18],[147,10,200,2],[148,0,216,2],[148,8,216,8,"routeNames"],[148,18,216,18],[148,21,216,21,"routeConfigs"],[148,33,216,33],[148,34,216,34,"map"],[148,37,216,21],[148,38,216,38],[148,48,216,39,"config"],[148,54,216,38],[149,0,216,38],[149,13,216,50,"config"],[149,19,216,56],[149,20,216,57,"name"],[149,24,216,38],[150,0,216,38],[150,5,216,21],[150,6,216,2],[151,0,217,2],[151,8,217,8,"routeParamList"],[151,22,217,22],[151,25,217,25,"routeNames"],[151,35,217,35],[151,36,217,36,"reduce"],[151,42,217,25],[151,43,218,4],[151,53,218,5,"acc"],[151,56,218,4],[151,58,218,10,"curr"],[151,62,218,4],[151,64,218,19],[152,0,218,19],[154,0,218,19],[154,10,219,14,"initialParams"],[154,23,218,19],[154,26,219,32,"screens"],[154,33,219,39],[154,34,219,40,"curr"],[154,38,219,39],[154,39,218,19],[154,40,219,14,"initialParams"],[154,53,218,19],[155,0,220,6],[155,10,220,12,"initialParamsFromParams"],[155,33,220,35],[155,36,221,8],[155,37,221,8,"route"],[155,42,221,13],[155,50,221,8],[155,79,221,8,"route"],[155,84,221,13],[155,85,221,15,"params"],[155,91,221,8],[155,126,221,23,"initial"],[155,133,221,8],[155,139,221,35],[155,144,221,8],[155,148,221,44],[155,149,221,44,"route"],[155,154,221,49],[155,162,221,44],[155,192,221,44,"route"],[155,197,221,49],[155,198,221,51,"params"],[155,204,221,44],[155,240,221,59,"screen"],[155,246,221,44],[155,252,221,70,"curr"],[155,256,221,8],[155,259,222,12,"route"],[155,264,222,17],[155,265,222,18,"params"],[155,271,222,12],[155,272,222,25,"params"],[155,278,221,8],[155,281,223,12,"undefined"],[155,290,220,6],[156,0,225,6,"acc"],[156,6,225,6,"acc"],[156,9,225,9],[156,10,225,10,"curr"],[156,14,225,9],[156,15,225,6],[156,18,226,8,"initialParams"],[156,31,226,21],[156,36,226,26,"undefined"],[156,45,226,8],[156,49,226,39,"initialParamsFromParams"],[156,72,226,62],[156,77,226,67,"undefined"],[156,86,226,8],[156,121,228,17,"initialParams"],[156,134,226,8],[156,137,229,17,"initialParamsFromParams"],[156,160,226,8],[156,164,231,12,"undefined"],[156,173,225,6],[157,0,233,6],[157,13,233,13,"acc"],[157,16,233,6],[158,0,234,5],[158,5,217,25],[158,7,235,4],[158,9,217,25],[158,10,217,2],[160,0,238,2],[160,8,238,6],[160,9,238,7,"routeNames"],[160,19,238,17],[160,20,238,18,"length"],[160,26,238,2],[160,28,238,26],[161,0,239,4],[161,12,239,10],[161,16,239,14,"Error"],[161,21,239,10],[161,22,240,6],[161,114,239,10],[161,115,239,4],[162,0,242,3],[164,0,244,2],[164,8,244,8,"isStateValid"],[164,20,244,20],[164,23,244,23,"React"],[164,28,244,28],[164,29,244,29,"useCallback"],[164,40,244,23],[164,41,245,4],[164,51,245,5,"state"],[164,56,245,4],[165,0,245,4],[165,13,245,15,"state"],[165,18,245,20],[165,19,245,21,"type"],[165,23,245,15],[165,28,245,30,"undefined"],[165,37,245,15],[165,41,245,43,"state"],[165,46,245,48],[165,47,245,49,"type"],[165,51,245,43],[165,56,245,58,"router"],[165,62,245,64],[165,63,245,65,"type"],[165,67,245,4],[166,0,245,4],[166,5,244,23],[166,7,246,4],[166,8,246,5,"router"],[166,14,246,11],[166,15,246,12,"type"],[166,19,246,4],[166,20,244,23],[166,21,244,2],[167,0,249,2],[167,8,249,8,"isStateInitialized"],[167,26,249,26],[167,29,249,29,"React"],[167,34,249,34],[167,35,249,35,"useCallback"],[167,46,249,29],[167,47,250,4],[167,57,250,5,"state"],[167,62,250,4],[168,0,250,4],[168,13,251,6,"state"],[168,18,251,11],[168,23,251,16,"undefined"],[168,32,251,6],[168,36,251,29,"state"],[168,41,251,34],[168,42,251,35,"stale"],[168,47,251,29],[168,52,251,45],[168,57,251,6],[168,61,251,54,"isStateValid"],[168,73,251,66],[168,74,251,67,"state"],[168,79,251,66],[168,80,250,4],[169,0,250,4],[169,5,249,29],[169,7,252,4],[169,8,252,5,"isStateValid"],[169,20,252,4],[169,21,249,29],[169,22,249,2],[171,0,169,2],[171,28,261,6,"React"],[171,33,261,11],[171,34,261,12,"useContext"],[171,44,261,6],[171,45,261,23,"NavigationStateContext"],[171,76,261,6],[171,77,169,2],[172,0,169,2],[172,8,256,11,"currentState"],[172,20,169,2],[172,41,256,4,"state"],[172,46,169,2],[173,0,169,2],[173,8,257,14,"getCurrentState"],[173,23,169,2],[173,44,257,4,"getState"],[173,52,169,2],[174,0,169,2],[174,8,258,4,"setState"],[174,16,169,2],[174,37,258,4,"setState"],[174,45,169,2],[175,0,169,2],[175,8,259,4,"setKey"],[175,14,169,2],[175,35,259,4,"setKey"],[175,41,169,2],[176,0,169,2],[176,8,260,4,"getKey"],[176,14,169,2],[176,35,260,4,"getKey"],[176,41,169,2],[178,0,169,2],[178,25,263,57,"React"],[178,30,263,62],[178,31,263,63,"useMemo"],[178,38,263,57],[178,39,263,71],[178,51,263,77],[179,0,268,4],[179,10,268,8,"currentState"],[179,22,268,20],[179,27,268,25,"undefined"],[179,36,268,8],[179,40,268,38],[179,41,268,39,"isStateValid"],[179,53,268,51],[179,54,268,52,"currentState"],[179,66,268,51],[179,67,268,4],[179,69,268,67],[180,0,269,6],[180,15,269,13],[180,16,270,8,"router"],[180,22,270,14],[180,23,270,15,"getInitialState"],[180,38,270,8],[180,39,270,31],[181,0,271,10,"routeNames"],[181,10,271,10,"routeNames"],[181,20,271,20],[181,22,271,10,"routeNames"],[181,32,270,31],[182,0,272,10,"routeParamList"],[182,10,272,10,"routeParamList"],[182,24,272,24],[182,26,272,10,"routeParamList"],[183,0,270,31],[183,9,270,8],[183,10,269,13],[183,12,274,8],[183,16,269,13],[183,17,269,6],[184,0,276,5],[184,7,268,4],[184,13,276,11],[185,0,277,6],[185,15,277,13],[185,16,278,8,"router"],[185,22,278,14],[185,23,278,15,"getRehydratedState"],[185,41,278,8],[185,42,278,34,"currentState"],[185,54,278,8],[185,56,278,71],[186,0,279,10,"routeNames"],[186,10,279,10,"routeNames"],[186,20,279,20],[186,22,279,10,"routeNames"],[186,32,278,71],[187,0,280,10,"routeParamList"],[187,10,280,10,"routeParamList"],[187,24,280,24],[187,26,280,10,"routeParamList"],[188,0,278,71],[188,9,278,8],[188,10,277,13],[188,12,282,8],[188,17,277,13],[188,18,277,6],[189,0,284,5],[190,0,292,3],[190,5,263,57],[190,7,292,5],[190,8,292,6,"currentState"],[190,20,292,5],[190,22,292,20,"router"],[190,28,292,5],[190,30,292,28,"isStateValid"],[190,42,292,5],[190,43,263,57],[190,44,169,2],[191,0,169,2],[192,0,169,2],[192,8,263,9,"initializedState"],[192,24,169,2],[193,0,169,2],[193,8,263,27,"isFirstStateInitialization"],[193,34,169,2],[195,0,294,2],[195,8,294,6,"state"],[195,13,294,11],[195,16,298,4,"isStateInitialized"],[195,34,298,22],[195,35,298,23,"currentState"],[195,47,298,22],[195,48,298,4],[195,51,299,9,"currentState"],[195,63,298,4],[195,66,300,9,"initializedState"],[195,82,294,2],[196,0,302,2],[196,8,302,6,"nextState"],[196,17,302,22],[196,20,302,25,"state"],[196,25,302,2],[198,0,304,2],[198,8,304,6],[198,9,304,7],[198,36,304,20,"state"],[198,41,304,25],[198,42,304,26,"routeNames"],[198,52,304,7],[198,54,304,38,"routeNames"],[198,64,304,7],[198,65,304,2],[198,67,304,51],[199,0,306,4,"nextState"],[199,6,306,4,"nextState"],[199,15,306,13],[199,18,306,16,"router"],[199,24,306,22],[199,25,306,23,"getStateForRouteNamesChange"],[199,52,306,16],[199,53,306,51,"state"],[199,58,306,16],[199,60,306,58],[200,0,307,6,"routeNames"],[200,8,307,6,"routeNames"],[200,18,307,16],[200,20,307,6,"routeNames"],[200,30,306,58],[201,0,308,6,"routeParamList"],[201,8,308,6,"routeParamList"],[201,22,308,20],[201,24,308,6,"routeParamList"],[202,0,306,58],[202,7,306,16],[202,8,306,4],[203,0,310,3],[205,0,312,2],[205,8,313,4],[205,16,313,11,"route"],[205,21,313,4],[205,59,313,11,"route"],[205,64,313,16],[205,65,313,18,"params"],[205,71,313,4],[205,92,313,11],[205,107,313,26,"screen"],[205,113,313,4],[205,119,313,37],[205,127,313,4],[205,132,314,5,"route"],[205,137,314,10],[205,138,314,11,"params"],[205,144,314,5],[205,149,314,22,"previousNestedParamsRef"],[205,172,314,45],[205,173,314,46,"current"],[205,180,314,5],[205,184,315,7,"route"],[205,189,315,12],[205,190,315,13,"params"],[205,196,315,7],[205,197,315,20,"initial"],[205,204,315,7],[205,209,315,32],[205,214,315,7],[205,218,315,41,"isFirstStateInitialization"],[205,244,313,4],[205,245,312,2],[205,247,316,4],[206,0,319,4],[206,10,319,10,"updatedState"],[206,22,319,22],[206,25,319,25,"router"],[206,31,319,31],[206,32,319,32,"getStateForAction"],[206,49,319,25],[206,50,320,6,"nextState"],[206,59,319,25],[206,61,321,6,"CommonActions"],[206,84,321,20,"navigate"],[206,92,321,6],[206,93,321,29,"route"],[206,98,321,34],[206,99,321,35,"params"],[206,105,321,29],[206,106,321,42,"screen"],[206,112,321,6],[206,114,321,50,"route"],[206,119,321,55],[206,120,321,56,"params"],[206,126,321,50],[206,127,321,63,"params"],[206,133,321,6],[206,134,319,25],[206,136,322,6],[207,0,323,8,"routeNames"],[207,8,323,8,"routeNames"],[207,18,323,18],[207,20,323,8,"routeNames"],[207,30,322,6],[208,0,324,8,"routeParamList"],[208,8,324,8,"routeParamList"],[208,22,324,22],[208,24,324,8,"routeParamList"],[209,0,322,6],[209,7,319,25],[209,8,319,4],[210,0,328,4,"nextState"],[210,6,328,4,"nextState"],[210,15,328,13],[210,18,329,6,"updatedState"],[210,30,329,18],[210,35,329,23],[210,39,329,6],[210,42,330,10,"router"],[210,48,330,16],[210,49,330,17,"getRehydratedState"],[210,67,330,10],[210,68,330,36,"updatedState"],[210,80,330,10],[210,82,330,50],[211,0,331,12,"routeNames"],[211,8,331,12,"routeNames"],[211,18,331,22],[211,20,331,12,"routeNames"],[211,30,330,50],[212,0,332,12,"routeParamList"],[212,8,332,12,"routeParamList"],[212,22,332,26],[212,24,332,12,"routeParamList"],[213,0,330,50],[213,7,330,10],[213,8,329,6],[213,11,334,10,"nextState"],[213,20,328,4],[214,0,335,3],[216,0,337,2],[216,8,337,8,"shouldUpdate"],[216,20,337,20],[216,23,337,23,"state"],[216,28,337,28],[216,33,337,33,"nextState"],[216,42,337,2],[217,0,339,2],[217,36,339,20],[217,48,339,26],[218,0,340,4],[218,10,340,8,"shouldUpdate"],[218,22,340,4],[218,24,340,22],[219,0,342,6,"setState"],[219,8,342,6,"setState"],[219,16,342,14],[219,17,342,15,"nextState"],[219,26,342,14],[219,27,342,6],[220,0,343,5],[221,0,344,3],[221,5,339,2],[222,0,349,2,"state"],[222,4,349,2,"state"],[222,9,349,7],[222,12,349,10,"nextState"],[222,21,349,2],[223,0,351,2,"React"],[223,4,351,2,"React"],[223,9,351,7],[223,10,351,8,"useEffect"],[223,19,351,2],[223,20,351,18],[223,32,351,24],[224,0,352,4,"setKey"],[224,6,352,4,"setKey"],[224,12,352,10],[224,13,352,11,"navigatorKey"],[224,25,352,10],[224,26,352,4],[225,0,354,4],[225,13,354,11],[225,25,354,17],[226,0,359,6,"setTimeout"],[226,8,359,6,"setTimeout"],[226,18,359,16],[226,19,359,17],[226,31,359,23],[227,0,360,8],[227,14,360,12,"getCurrentState"],[227,29,360,27],[227,36,360,34,"undefined"],[227,45,360,12],[227,49,360,47,"getKey"],[227,55,360,53],[227,62,360,60,"navigatorKey"],[227,74,360,8],[227,76,360,74],[228,0,361,10,"setState"],[228,12,361,10,"setState"],[228,20,361,18],[228,21,361,19,"undefined"],[228,30,361,18],[228,31,361,10],[229,0,362,9],[230,0,363,7],[230,9,359,16],[230,11,363,9],[230,12,359,16],[230,13,359,6],[231,0,364,5],[231,7,354,4],[232,0,366,3],[232,5,351,2],[232,7,366,5],[232,9,351,2],[233,0,371,2],[233,8,371,8,"initializedStateRef"],[233,27,371,27],[233,30,371,30,"React"],[233,35,371,35],[233,36,371,36,"useRef"],[233,42,371,30],[233,44,371,2],[234,0,372,2,"initializedStateRef"],[234,4,372,2,"initializedStateRef"],[234,23,372,21],[234,24,372,22,"current"],[234,31,372,2],[234,34,372,32,"initializedState"],[234,50,372,2],[235,0,374,2],[235,8,374,8,"getState"],[235,16,374,16],[235,19,374,19,"React"],[235,24,374,24],[235,25,374,25,"useCallback"],[235,36,374,19],[235,37,374,37],[235,49,374,50],[236,0,375,4],[236,10,375,10,"currentState"],[236,22,375,22],[236,25,375,25,"getCurrentState"],[236,40,375,40],[236,42,375,4],[237,0,377,4],[237,13,377,11,"isStateInitialized"],[237,31,377,29],[237,32,377,30,"currentState"],[237,44,377,29],[237,45,377,11],[237,48,378,9,"currentState"],[237,60,377,11],[237,63,379,9,"initializedStateRef"],[237,82,379,28],[237,83,379,29,"current"],[237,90,377,4],[238,0,380,3],[238,5,374,19],[238,7,380,5],[238,8,380,6,"getCurrentState"],[238,23,380,5],[238,25,380,23,"isStateInitialized"],[238,43,380,5],[238,44,374,19],[238,45,374,2],[239,0,382,2],[239,8,382,8,"emitter"],[239,15,382,15],[239,18,382,18],[239,48,382,55],[239,58,382,56,"e"],[239,59,382,55],[239,61,382,62],[240,0,382,62],[242,0,383,4],[242,10,383,8,"routeNames"],[242,20,383,18],[242,23,383,21],[242,25,383,4],[243,0,385,4],[243,10,385,8,"route"],[243,15,385,4],[245,0,387,4],[245,10,387,8,"e"],[245,11,387,9],[245,12,387,10,"target"],[245,18,387,4],[245,20,387,18],[246,0,387,18],[248,0,388,6,"route"],[248,8,388,6,"route"],[248,13,388,11],[248,16,388,14,"state"],[248,21,388,19],[248,22,388,20,"routes"],[248,28,388,14],[248,29,388,27,"find"],[248,33,388,14],[248,34,388,32],[248,44,388,33,"route"],[248,49,388,32],[249,0,388,32],[249,17,388,43,"route"],[249,22,388,48],[249,23,388,49,"key"],[249,26,388,43],[249,31,388,57,"e"],[249,32,388,58],[249,33,388,59,"target"],[249,39,388,32],[250,0,388,32],[250,9,388,14],[250,10,388,6],[252,0,390,6],[252,22,390,10,"route"],[252,27,390,6],[252,48,390,10],[252,55,390,17,"name"],[252,59,390,6],[252,61,390,23],[253,0,391,8,"routeNames"],[253,10,391,8,"routeNames"],[253,20,391,18],[253,21,391,19,"push"],[253,25,391,8],[253,26,391,24,"route"],[253,31,391,29],[253,32,391,30,"name"],[253,36,391,8],[254,0,392,7],[255,0,393,5],[255,7,387,4],[255,13,393,11],[256,0,394,6,"route"],[256,8,394,6,"route"],[256,13,394,11],[256,16,394,14,"state"],[256,21,394,19],[256,22,394,20,"routes"],[256,28,394,14],[256,29,394,27,"state"],[256,34,394,32],[256,35,394,33,"index"],[256,40,394,14],[256,41,394,6],[257,0,395,6,"routeNames"],[257,8,395,6,"routeNames"],[257,18,395,16],[257,19,395,17,"push"],[257,23,395,6],[257,30,395,6,"routeNames"],[257,40,395,16],[257,75,396,11,"Object"],[257,81,396,17],[257,82,396,18,"keys"],[257,86,396,11],[257,87,396,23,"screens"],[257,94,396,11],[257,96,396,32,"filter"],[257,102,396,11],[257,103,396,39],[257,113,396,40,"name"],[257,117,396,39],[258,0,396,39],[260,0,396,39],[260,17,396,49],[260,29,396,49,"route"],[260,34,396,54],[260,43,396,49],[260,63,396,56,"name"],[260,67,396,49],[260,73,396,65,"name"],[260,77,396,39],[261,0,396,39],[261,9,396,11],[261,10,395,16],[261,12,395,6],[262,0,398,5],[264,0,400,4],[264,10,400,8,"route"],[264,15,400,13],[264,19,400,17],[264,23,400,4],[264,25,400,23],[265,0,401,6],[266,0,402,5],[268,0,404,4],[268,10,404,10,"navigation"],[268,20,404,20],[268,23,404,23,"descriptors"],[268,34,404,34],[268,35,404,35,"route"],[268,40,404,40],[268,41,404,41,"key"],[268,44,404,34],[268,45,404,23],[268,46,404,46,"navigation"],[268,56,404,4],[270,0,406,4],[270,10,406,10,"listeners"],[270,19,406,19],[270,22,406,22],[270,31,406,23],[270,33,406,22],[270,35,407,7,"concat"],[270,41,406,22],[270,88,408,11,"routeNames"],[270,98,408,21],[270,99,408,22,"map"],[270,102,408,11],[270,103,408,26],[270,113,408,27,"name"],[270,117,408,26],[270,119,408,36],[271,0,408,36],[271,12,409,18,"listeners"],[271,21,408,36],[271,24,409,32,"screens"],[271,31,409,39],[271,32,409,40,"name"],[271,36,409,39],[271,37,408,36],[271,38,409,18,"listeners"],[271,47,408,36],[272,0,410,10],[272,12,410,16,"map"],[272,15,410,19],[272,18,411,12],[272,25,411,19,"listeners"],[272,34,411,12],[272,39,411,33],[272,49,411,12],[272,52,412,16,"listeners"],[272,61,412,25],[272,62,412,26],[273,0,412,28,"route"],[273,10,412,28,"route"],[273,15,412,33],[273,17,412,35,"route"],[273,22,412,26],[274,0,412,49,"navigation"],[274,10,412,49,"navigation"],[274,20,412,59],[274,22,412,49,"navigation"],[275,0,412,26],[275,9,412,25],[275,10,411,12],[275,13,413,16,"listeners"],[275,22,410,10],[276,0,415,10],[276,15,415,17,"map"],[276,18,415,20],[276,21,416,14,"Object"],[276,27,416,20],[276,28,416,21,"keys"],[276,32,416,14],[276,33,416,26,"map"],[276,36,416,14],[276,38,417,17,"filter"],[276,44,416,14],[276,45,417,24],[276,55,417,25,"type"],[276,59,417,24],[277,0,417,24],[277,17,417,34,"type"],[277,21,417,38],[277,26,417,43,"e"],[277,27,417,44],[277,28,417,45,"type"],[277,32,417,24],[278,0,417,24],[278,9,416,14],[278,11,418,17,"map"],[278,14,416,14],[278,15,418,21],[278,25,418,22,"type"],[278,29,418,21],[279,0,418,21],[279,17,418,31,"map"],[279,20,418,21],[279,40,418,31,"map"],[279,43,418,34],[279,44,418,37,"type"],[279,48,418,34],[279,49,418,21],[280,0,418,21],[280,9,416,14],[280,10,415,20],[280,13,419,14,"undefined"],[280,22,415,10],[281,0,420,9],[281,7,408,11],[281,8,406,22],[281,11,422,7,"filter"],[281,17,406,22],[281,18,422,14],[281,28,422,15,"cb"],[281,30,422,14],[281,32,422,19,"i"],[281,33,422,14],[281,35,422,22,"self"],[281,39,422,14],[282,0,422,14],[282,15,422,31,"cb"],[282,17,422,33],[282,21,422,37,"self"],[282,25,422,41],[282,26,422,42,"lastIndexOf"],[282,37,422,37],[282,38,422,54,"cb"],[282,40,422,37],[282,46,422,62,"i"],[282,47,422,14],[283,0,422,14],[283,7,406,22],[283,8,406,4],[285,0,424,4,"listeners"],[285,6,424,4,"listeners"],[285,15,424,13],[285,16,424,14,"forEach"],[285,23,424,4],[285,24,424,22],[285,34,424,23,"listener"],[285,42,424,22],[286,0,424,22],[286,15,424,36,"listener"],[286,23,424,22],[286,43,424,36,"listener"],[286,51,424,44],[286,52,424,47,"e"],[286,53,424,44],[286,54,424,22],[287,0,424,22],[287,7,424,4],[288,0,425,3],[288,5,382,18],[288,6,382,2],[289,0,427,2],[289,33,427,17],[290,0,427,19,"state"],[290,6,427,19,"state"],[290,11,427,24],[290,13,427,19,"state"],[290,18,427,17],[291,0,427,26,"emitter"],[291,6,427,26,"emitter"],[291,13,427,33],[291,15,427,26,"emitter"],[292,0,427,17],[292,5,427,2],[293,0,429,2,"React"],[293,4,429,2,"React"],[293,9,429,7],[293,10,429,8,"useEffect"],[293,19,429,2],[293,20,429,18],[293,32,429,24],[294,0,430,4,"emitter"],[294,6,430,4,"emitter"],[294,13,430,11],[294,14,430,12,"emit"],[294,18,430,4],[294,19,430,17],[295,0,430,19,"type"],[295,8,430,19,"type"],[295,12,430,23],[295,14,430,25],[295,21,430,17],[296,0,430,34,"data"],[296,8,430,34,"data"],[296,12,430,38],[296,14,430,40],[297,0,430,42,"state"],[297,10,430,42,"state"],[297,15,430,47],[297,17,430,42,"state"],[298,0,430,40],[299,0,430,17],[299,7,430,4],[300,0,431,3],[300,5,429,2],[300,7,431,5],[300,8,431,6,"emitter"],[300,15,431,5],[300,17,431,15,"state"],[300,22,431,5],[300,23,429,2],[302,0,169,2],[302,32,436,6],[302,71,169,2],[303,0,169,2],[303,8,434,15,"actionListeners"],[303,23,169,2],[303,48,434,4,"listeners"],[303,57,169,2],[304,0,169,2],[304,8,435,17,"addActionListener"],[304,25,169,2],[304,50,435,4,"addListener"],[304,61,169,2],[306,0,169,2],[306,31,441,6],[306,67,169,2],[307,0,169,2],[307,8,439,15,"focusedListeners"],[307,24,169,2],[307,48,439,4,"listeners"],[307,57,169,2],[308,0,169,2],[308,8,440,17,"addFocusedListener"],[308,26,169,2],[308,50,440,4,"addListener"],[308,61,169,2],[310,0,169,2],[310,27,443,47],[310,59,169,2],[311,0,169,2],[311,8,443,10,"getStateForRoute"],[311,24,169,2],[311,44,443,10,"getStateForRoute"],[311,60,169,2],[312,0,169,2],[312,8,443,28,"addStateGetter"],[312,22,169,2],[312,42,443,28,"addStateGetter"],[312,56,169,2],[314,0,445,2],[314,8,445,8,"onAction"],[314,16,445,16],[314,19,445,19],[314,45,445,31],[315,0,446,4,"router"],[315,6,446,4,"router"],[315,12,446,10],[315,14,446,4,"router"],[315,20,445,31],[316,0,447,4,"getState"],[316,6,447,4,"getState"],[316,14,447,12],[316,16,447,4,"getState"],[316,24,445,31],[317,0,448,4,"setState"],[317,6,448,4,"setState"],[317,14,448,12],[317,16,448,4,"setState"],[317,24,445,31],[318,0,449,4,"key"],[318,6,449,4,"key"],[318,9,449,7],[318,11,449,9,"route"],[318,16,449,7],[318,36,449,9,"route"],[318,41,449,14],[318,42,449,16,"key"],[318,45,445,31],[319,0,450,4,"listeners"],[319,6,450,4,"listeners"],[319,15,450,13],[319,17,450,15,"actionListeners"],[319,32,445,31],[320,0,451,4,"routerConfigOptions"],[320,6,451,4,"routerConfigOptions"],[320,25,451,23],[320,27,451,25],[321,0,452,6,"routeNames"],[321,8,452,6,"routeNames"],[321,18,452,16],[321,20,452,6,"routeNames"],[321,30,451,25],[322,0,453,6,"routeParamList"],[322,8,453,6,"routeParamList"],[322,22,453,20],[322,24,453,6,"routeParamList"],[323,0,451,25],[324,0,445,31],[324,5,445,19],[324,6,445,2],[325,0,457,2],[325,8,457,8,"onRouteFocus"],[325,20,457,20],[325,23,457,23],[325,53,457,39],[326,0,458,4,"router"],[326,6,458,4,"router"],[326,12,458,10],[326,14,458,4,"router"],[326,20,457,39],[327,0,459,4,"key"],[327,6,459,4,"key"],[327,9,459,7],[327,11,459,9,"route"],[327,16,459,7],[327,36,459,9,"route"],[327,41,459,14],[327,42,459,16,"key"],[327,45,457,39],[328,0,460,4,"getState"],[328,6,460,4,"getState"],[328,14,460,12],[328,16,460,4,"getState"],[328,24,457,39],[329,0,461,4,"setState"],[329,6,461,4,"setState"],[329,14,461,12],[329,16,461,4,"setState"],[330,0,457,39],[330,5,457,23],[330,6,457,2],[331,0,464,2],[331,8,464,8,"navigation"],[331,18,464,18],[331,21,464,21],[331,56,464,77],[332,0,465,4,"onAction"],[332,6,465,4,"onAction"],[332,14,465,12],[332,16,465,4,"onAction"],[332,24,464,77],[333,0,466,4,"getState"],[333,6,466,4,"getState"],[333,14,466,12],[333,16,466,4,"getState"],[333,24,464,77],[334,0,467,4,"emitter"],[334,6,467,4,"emitter"],[334,13,467,11],[334,15,467,4,"emitter"],[334,22,464,77],[335,0,468,4,"router"],[335,6,468,4,"router"],[335,12,468,10],[335,14,468,4,"router"],[336,0,464,77],[336,5,464,21],[336,6,464,2],[337,0,471,2],[337,53,471,37],[338,0,472,4,"navigation"],[338,6,472,4,"navigation"],[338,16,472,14],[338,18,472,4,"navigation"],[338,28,471,37],[339,0,473,4,"focusedListeners"],[339,6,473,4,"focusedListeners"],[339,22,473,20],[339,24,473,4,"focusedListeners"],[340,0,471,37],[340,5,471,2],[341,0,476,2],[341,32,476,16],[342,0,477,4,"getState"],[342,6,477,4,"getState"],[342,14,477,12],[342,16,477,4,"getState"],[342,24,476,16],[343,0,478,4,"getStateForRoute"],[343,6,478,4,"getStateForRoute"],[343,22,478,20],[343,24,478,4,"getStateForRoute"],[344,0,476,16],[344,5,476,2],[345,0,481,2],[345,8,481,8,"descriptors"],[345,19,481,19],[345,22,481,22],[345,51,481,69],[346,0,482,4,"state"],[346,6,482,4,"state"],[346,11,482,9],[346,13,482,4,"state"],[346,18,481,69],[347,0,483,4,"screens"],[347,6,483,4,"screens"],[347,13,483,11],[347,15,483,4,"screens"],[347,22,481,69],[348,0,484,4,"navigation"],[348,6,484,4,"navigation"],[348,16,484,14],[348,18,484,4,"navigation"],[348,28,481,69],[349,0,485,4,"screenOptions"],[349,6,485,4,"screenOptions"],[349,19,485,17],[349,21,485,19,"options"],[349,28,485,26],[349,29,485,27,"screenOptions"],[349,42,481,69],[350,0,486,4,"onAction"],[350,6,486,4,"onAction"],[350,14,486,12],[350,16,486,4,"onAction"],[350,24,481,69],[351,0,487,4,"getState"],[351,6,487,4,"getState"],[351,14,487,12],[351,16,487,4,"getState"],[351,24,481,69],[352,0,488,4,"setState"],[352,6,488,4,"setState"],[352,14,488,12],[352,16,488,4,"setState"],[352,24,481,69],[353,0,489,4,"onRouteFocus"],[353,6,489,4,"onRouteFocus"],[353,18,489,16],[353,20,489,4,"onRouteFocus"],[353,32,481,69],[354,0,490,4,"addActionListener"],[354,6,490,4,"addActionListener"],[354,23,490,21],[354,25,490,4,"addActionListener"],[354,42,481,69],[355,0,491,4,"addFocusedListener"],[355,6,491,4,"addFocusedListener"],[355,24,491,22],[355,26,491,4,"addFocusedListener"],[355,44,481,69],[356,0,492,4,"addStateGetter"],[356,6,492,4,"addStateGetter"],[356,20,492,18],[356,22,492,4,"addStateGetter"],[356,36,481,69],[357,0,493,4,"router"],[357,6,493,4,"router"],[357,12,493,10],[357,14,493,4,"router"],[357,20,481,69],[358,0,494,4,"emitter"],[358,6,494,4,"emitter"],[358,13,494,11],[358,15,494,4,"emitter"],[359,0,481,69],[359,5,481,22],[359,6,481,2],[360,0,497,2],[360,35,497,19],[361,0,498,4,"state"],[361,6,498,4,"state"],[361,11,498,9],[361,13,498,4,"state"],[361,18,497,19],[362,0,499,4,"navigation"],[362,6,499,4,"navigation"],[362,16,499,14],[362,18,499,4,"navigation"],[362,28,497,19],[363,0,500,4,"descriptors"],[363,6,500,4,"descriptors"],[363,17,500,15],[363,19,500,4,"descriptors"],[364,0,497,19],[364,5,497,2],[365,0,503,2],[365,11,503,9],[366,0,504,4,"state"],[366,6,504,4,"state"],[366,11,504,9],[366,13,504,4,"state"],[366,18,503,9],[367,0,505,4,"navigation"],[367,6,505,4,"navigation"],[367,16,505,14],[367,18,505,4,"navigation"],[367,28,503,9],[368,0,506,4,"descriptors"],[368,6,506,4,"descriptors"],[368,17,506,15],[368,19,506,4,"descriptors"],[369,0,503,9],[369,5,503,2],[370,0,508,1]],"functionMap":{"names":["<global>","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","React.useEffect$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","React.useCallback$argument_0","React.useMemo$argument_0","useScheduleUpdate$argument_0","<anonymous>","setTimeout$argument_0","useEventEmitter$argument_0","state.routes.find$argument_0","Object.keys.filter$argument_0","routeNames.map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0"],"mappings":"AAA;oCCyD;ICS;GDmC;oBEG;KF2C;CDI;eIS;kBCiB;GDE;IEyB;GFS;sCGE,uBH;IIE;KJgB;IKW,iEL;IKK;yELC;uEMY;GN6B;oBO+C;GPK;kBCO;WOG;iBCK;ODI;KPC;GDE;qCKQ;GLM;uDUE;gCCM,iCD;uCEQ,8BF;0BGY;wBDS,yBC;qBCC,qBD;SHE;cKE,iDL;sBME,2BN;GVC;kBCI;GDE;CJ6E"}},"type":"js/module"}]}