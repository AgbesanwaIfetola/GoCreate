{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"escape-string-regexp","data":{"isAsync":false}},{"name":"query-string","data":{"isAsync":false}},{"name":"./checkLegacyPathConfig","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getStateFromPath;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _escapeStringRegexp = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"escape-string-regexp\"));\n\n  var _queryString = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"query-string\"));\n\n  var _checkLegacyPathConfig = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./checkLegacyPathConfig\"));\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\n  function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\n  function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function getStateFromPath(path, options) {\n    var _ref;\n\n    var _checkLegacyPathConfi = (0, _checkLegacyPathConfig.default)(options),\n        _checkLegacyPathConfi2 = (0, _slicedToArray2.default)(_checkLegacyPathConfi, 2),\n        legacy = _checkLegacyPathConfi2[0],\n        compatOptions = _checkLegacyPathConfi2[1];\n\n    var initialRoutes = [];\n\n    if (compatOptions == null ? void 0 : compatOptions.initialRouteName) {\n      initialRoutes.push({\n        initialRouteName: compatOptions.initialRouteName,\n        connectedRoutes: Object.keys(compatOptions.screens)\n      });\n    }\n\n    var screens = compatOptions == null ? void 0 : compatOptions.screens;\n    var remaining = path.replace(/\\/+/g, '/').replace(/^\\//, '').replace(/\\?.*$/, '');\n    remaining = remaining.endsWith('/') ? remaining : remaining + \"/\";\n\n    if (screens === undefined) {\n      var routes = remaining.split('/').filter(Boolean).map(function (segment, i, self) {\n        var name = decodeURIComponent(segment);\n\n        if (i === self.length - 1) {\n          return {\n            name: name,\n            params: parseQueryParams(path)\n          };\n        }\n\n        return {\n          name: name\n        };\n      });\n\n      if (routes.length) {\n        return createNestedStateObject(routes, initialRoutes);\n      }\n\n      return undefined;\n    }\n\n    var configs = (_ref = []).concat.apply(_ref, (0, _toConsumableArray2.default)(Object.keys(screens).map(function (key) {\n      return createNormalizedConfigs(legacy, key, screens, [], initialRoutes);\n    }))).sort(function (a, b) {\n      if (a.pattern.startsWith(b.pattern)) {\n        return 1;\n      }\n\n      if (b.pattern.startsWith(a.pattern)) {\n        return 1;\n      }\n\n      var aParts = a.pattern.split('/');\n      var bParts = b.pattern.split('/');\n      var aWildcardIndex = aParts.indexOf('*');\n      var bWildcardIndex = bParts.indexOf('*');\n\n      if (aWildcardIndex === -1 && bWildcardIndex !== -1) {\n        return -1;\n      }\n\n      if (aWildcardIndex !== -1 && bWildcardIndex === -1) {\n        return 1;\n      }\n\n      if (aWildcardIndex === bWildcardIndex) {\n        return bParts.length - aParts.length;\n      }\n\n      return bWildcardIndex - aWildcardIndex;\n    });\n\n    if (remaining === '/') {\n      var match = configs.find(function (config) {\n        return config.path === '' && config.routeNames.every(function (name) {\n          var _configs$find;\n\n          return !((_configs$find = configs.find(function (c) {\n            return c.screen === name;\n          })) == null ? void 0 : _configs$find.path);\n        });\n      });\n\n      if (match) {\n        return createNestedStateObject(match.routeNames.map(function (name, i, self) {\n          if (i === self.length - 1) {\n            return {\n              name: name,\n              params: parseQueryParams(path, match.parse)\n            };\n          }\n\n          return {\n            name: name\n          };\n        }), initialRoutes);\n      }\n\n      return undefined;\n    }\n\n    var result;\n    var current;\n\n    if (legacy === false) {\n      var _matchAgainstConfigs = matchAgainstConfigs(remaining, configs.map(function (c) {\n        return _objectSpread(_objectSpread({}, c), {}, {\n          regex: c.regex ? new RegExp(c.regex.source + '$') : undefined\n        });\n      })),\n          routeNames = _matchAgainstConfigs.routeNames,\n          allParams = _matchAgainstConfigs.allParams,\n          remainingPath = _matchAgainstConfigs.remainingPath;\n\n      if (routeNames !== undefined) {\n        remaining = remainingPath;\n        current = createNestedStateObject(createRouteObjects(configs, routeNames, allParams), initialRoutes);\n        result = current;\n      }\n    } else {\n      while (remaining) {\n        var _matchAgainstConfigs2 = matchAgainstConfigs(remaining, configs),\n            _routeNames = _matchAgainstConfigs2.routeNames,\n            _allParams = _matchAgainstConfigs2.allParams,\n            _remainingPath = _matchAgainstConfigs2.remainingPath;\n\n        remaining = _remainingPath;\n\n        if (_routeNames === undefined) {\n          var segments = remaining.split('/');\n          _routeNames = [decodeURIComponent(segments[0])];\n          segments.shift();\n          remaining = segments.join('/');\n        }\n\n        var state = createNestedStateObject(createRouteObjects(configs, _routeNames, _allParams), initialRoutes);\n\n        if (current) {\n          var _current2;\n\n          while ((_current = current) == null ? void 0 : _current.routes[current.index || 0].state) {\n            var _current;\n\n            current = current.routes[current.index || 0].state;\n          }\n\n          current.routes[((_current2 = current) == null ? void 0 : _current2.index) || 0].state = state;\n        } else {\n          result = state;\n        }\n\n        current = state;\n      }\n    }\n\n    if (current == null || result == null) {\n      return undefined;\n    }\n\n    var route = findFocusedRoute(current);\n    var params = parseQueryParams(path, findParseConfigForRoute(route.name, configs));\n\n    if (params) {\n      route.params = _objectSpread(_objectSpread({}, route.params), params);\n    }\n\n    return result;\n  }\n\n  var joinPaths = function joinPaths() {\n    var _ref2;\n\n    for (var _len = arguments.length, paths = new Array(_len), _key = 0; _key < _len; _key++) {\n      paths[_key] = arguments[_key];\n    }\n\n    return (_ref2 = []).concat.apply(_ref2, (0, _toConsumableArray2.default)(paths.map(function (p) {\n      return p.split('/');\n    }))).filter(Boolean).join('/');\n  };\n\n  var matchAgainstConfigs = function matchAgainstConfigs(remaining, configs) {\n    var routeNames;\n    var allParams;\n    var remainingPath = remaining;\n\n    var _loop2 = function _loop2(config) {\n      if (!config.regex) {\n        return \"continue\";\n      }\n\n      var match = remainingPath.match(config.regex);\n\n      if (match) {\n        routeNames = (0, _toConsumableArray2.default)(config.routeNames);\n        var paramPatterns = config.pattern.split('/').filter(function (p) {\n          return p.startsWith(':');\n        });\n\n        if (paramPatterns.length) {\n          allParams = paramPatterns.reduce(function (acc, p, i) {\n            var value = match[(i + 1) * 2].replace(/\\//, '');\n            acc[p] = value;\n            return acc;\n          }, {});\n        }\n\n        remainingPath = remainingPath.replace(match[1], '');\n        return \"break\";\n      }\n    };\n\n    _loop: for (var _iterator = _createForOfIteratorHelperLoose(configs), _step; !(_step = _iterator()).done;) {\n      var config = _step.value;\n\n      var _ret = _loop2(config);\n\n      switch (_ret) {\n        case \"continue\":\n          continue;\n\n        case \"break\":\n          break _loop;\n      }\n    }\n\n    return {\n      routeNames: routeNames,\n      allParams: allParams,\n      remainingPath: remainingPath\n    };\n  };\n\n  var createNormalizedConfigs = function createNormalizedConfigs(legacy, screen, routeConfig) {\n    var routeNames = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    var initials = arguments.length > 4 ? arguments[4] : undefined;\n    var parentPattern = arguments.length > 5 ? arguments[5] : undefined;\n    var configs = [];\n    routeNames.push(screen);\n    var config = routeConfig[screen];\n\n    if (typeof config === 'string') {\n      var pattern = parentPattern ? joinPaths(parentPattern, config) : config;\n      configs.push(createConfigItem(legacy, screen, routeNames, pattern, config));\n    } else if (typeof config === 'object') {\n      var _pattern;\n\n      if (typeof config.path === 'string') {\n        if (legacy) {\n          _pattern = config.exact !== true && parentPattern ? joinPaths(parentPattern, config.path) : config.path;\n        } else {\n          if (config.exact && config.path === undefined) {\n            throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n          }\n\n          _pattern = config.exact !== true ? joinPaths(parentPattern || '', config.path || '') : config.path || '';\n        }\n\n        configs.push(createConfigItem(legacy, screen, routeNames, _pattern, config.path, config.parse));\n      }\n\n      if (config.screens) {\n        if (config.initialRouteName) {\n          initials.push({\n            initialRouteName: config.initialRouteName,\n            connectedRoutes: Object.keys(config.screens)\n          });\n        }\n\n        Object.keys(config.screens).forEach(function (nestedConfig) {\n          var _pattern2;\n\n          var result = createNormalizedConfigs(legacy, nestedConfig, config.screens, routeNames, initials, (_pattern2 = _pattern) != null ? _pattern2 : parentPattern);\n          configs.push.apply(configs, (0, _toConsumableArray2.default)(result));\n        });\n      }\n    }\n\n    routeNames.pop();\n    return configs;\n  };\n\n  var createConfigItem = function createConfigItem(legacy, screen, routeNames, pattern, path, parse) {\n    pattern = pattern.split('/').filter(Boolean).join('/');\n    var regex = pattern ? new RegExp(\"^(\" + pattern.split('/').map(function (it) {\n      if (legacy && it === '*') {\n        throw new Error(\"Please update your config to the new format to use wildcard pattern ('*'). https://reactnavigation.org/docs/configuring-links/#updating-config\");\n      }\n\n      if (it.startsWith(':')) {\n        return \"(([^/]+\\\\/)\" + (it.endsWith('?') ? '?' : '') + \")\";\n      }\n\n      return (it === '*' ? '.*' : (0, _escapeStringRegexp.default)(it)) + \"\\\\/\";\n    }).join('') + \")\") : undefined;\n    return {\n      screen: screen,\n      regex: regex,\n      pattern: pattern,\n      path: path,\n      routeNames: (0, _toConsumableArray2.default)(routeNames),\n      parse: parse\n    };\n  };\n\n  var findParseConfigForRoute = function findParseConfigForRoute(routeName, flatConfig) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(flatConfig), _step2; !(_step2 = _iterator2()).done;) {\n      var config = _step2.value;\n\n      if (routeName === config.routeNames[config.routeNames.length - 1]) {\n        return config.parse;\n      }\n    }\n\n    return undefined;\n  };\n\n  var findInitialRoute = function findInitialRoute(routeName, initialRoutes) {\n    for (var _iterator3 = _createForOfIteratorHelperLoose(initialRoutes), _step3; !(_step3 = _iterator3()).done;) {\n      var config = _step3.value;\n\n      if (config.connectedRoutes.includes(routeName)) {\n        return config.initialRouteName === routeName ? undefined : config.initialRouteName;\n      }\n    }\n\n    return undefined;\n  };\n\n  var createStateObject = function createStateObject(initialRoute, routeName, params, isEmpty) {\n    if (isEmpty) {\n      if (initialRoute) {\n        return {\n          index: 1,\n          routes: [{\n            name: initialRoute\n          }, {\n            name: routeName,\n            params: params\n          }]\n        };\n      } else {\n        return {\n          routes: [{\n            name: routeName,\n            params: params\n          }]\n        };\n      }\n    } else {\n      if (initialRoute) {\n        return {\n          index: 1,\n          routes: [{\n            name: initialRoute\n          }, {\n            name: routeName,\n            params: params,\n            state: {\n              routes: []\n            }\n          }]\n        };\n      } else {\n        return {\n          routes: [{\n            name: routeName,\n            params: params,\n            state: {\n              routes: []\n            }\n          }]\n        };\n      }\n    }\n  };\n\n  var createNestedStateObject = function createNestedStateObject(routes, initialRoutes) {\n    var state;\n    var route = routes.shift();\n    var initialRoute = findInitialRoute(route.name, initialRoutes);\n    state = createStateObject(initialRoute, route.name, route.params, routes.length === 0);\n\n    if (routes.length > 0) {\n      var nestedState = state;\n\n      while (route = routes.shift()) {\n        initialRoute = findInitialRoute(route.name, initialRoutes);\n        var nestedStateIndex = nestedState.index || nestedState.routes.length - 1;\n        nestedState.routes[nestedStateIndex].state = createStateObject(initialRoute, route.name, route.params, routes.length === 0);\n\n        if (routes.length > 0) {\n          nestedState = nestedState.routes[nestedStateIndex].state;\n        }\n      }\n    }\n\n    return state;\n  };\n\n  var createRouteObjects = function createRouteObjects(configs, routeNames, allParams) {\n    return routeNames.map(function (name) {\n      var config = configs.find(function (c) {\n        return c.screen === name;\n      });\n      var params;\n\n      if (allParams && (config == null ? void 0 : config.path)) {\n        var pattern = config.path;\n\n        if (pattern) {\n          var paramPatterns = pattern.split('/').filter(function (p) {\n            return p.startsWith(':');\n          });\n\n          if (paramPatterns.length) {\n            params = paramPatterns.reduce(function (acc, p) {\n              var key = p.replace(/^:/, '').replace(/\\?$/, '');\n              var value = allParams[p];\n\n              if (value) {\n                acc[key] = config.parse && config.parse[key] ? config.parse[key](value) : value;\n              }\n\n              return acc;\n            }, {});\n          }\n        }\n      }\n\n      if (params && Object.keys(params).length) {\n        return {\n          name: name,\n          params: params\n        };\n      }\n\n      return {\n        name: name\n      };\n    });\n  };\n\n  var findFocusedRoute = function findFocusedRoute(state) {\n    var _current4;\n\n    var current = state;\n\n    while ((_current3 = current) == null ? void 0 : _current3.routes[current.index || 0].state) {\n      var _current3;\n\n      current = current.routes[current.index || 0].state;\n    }\n\n    var route = current.routes[((_current4 = current) == null ? void 0 : _current4.index) || 0];\n    return route;\n  };\n\n  var parseQueryParams = function parseQueryParams(path, parseConfig) {\n    var query = path.split('?')[1];\n\n    var params = _queryString.default.parse(query);\n\n    if (parseConfig) {\n      Object.keys(params).forEach(function (name) {\n        if (parseConfig[name] && typeof params[name] === 'string') {\n          params[name] = parseConfig[name](params[name]);\n        }\n      });\n    }\n\n    return Object.keys(params).length ? params : undefined;\n  };\n});","lineCount":507,"map":[[15,0,1,0],[17,0,2,0],[19,0,8,0],[31,0,57,15],[31,11,57,24,"getStateFromPath"],[31,27,57,15],[31,28,58,2,"path"],[31,32,57,15],[31,34,59,2,"options"],[31,41,57,15],[31,43,60,27],[32,0,60,27],[34,0,60,27],[34,32,61,34],[34,68,61,56,"options"],[34,75,61,34],[34,76,60,27],[35,0,60,27],[36,0,60,27],[36,8,61,9,"legacy"],[36,14,60,27],[37,0,60,27],[37,8,61,17,"compatOptions"],[37,21,60,27],[39,0,63,2],[39,8,63,6,"initialRoutes"],[39,21,63,41],[39,24,63,44],[39,26,63,2],[41,0,65,2],[41,8,65,6,"compatOptions"],[41,21,65,2],[41,41,65,6,"compatOptions"],[41,54,65,19],[41,55,65,21,"initialRouteName"],[41,71,65,2],[41,73,65,39],[42,0,66,4,"initialRoutes"],[42,6,66,4,"initialRoutes"],[42,19,66,17],[42,20,66,18,"push"],[42,24,66,4],[42,25,66,23],[43,0,67,6,"initialRouteName"],[43,8,67,6,"initialRouteName"],[43,24,67,22],[43,26,67,24,"compatOptions"],[43,39,67,37],[43,40,67,38,"initialRouteName"],[43,56,66,23],[44,0,68,6,"connectedRoutes"],[44,8,68,6,"connectedRoutes"],[44,23,68,21],[44,25,68,23,"Object"],[44,31,68,29],[44,32,68,30,"keys"],[44,36,68,23],[44,37,68,35,"compatOptions"],[44,50,68,48],[44,51,68,49,"screens"],[44,58,68,23],[45,0,66,23],[45,7,66,4],[46,0,70,3],[48,0,72,2],[48,8,72,8,"screens"],[48,15,72,15],[48,18,72,18,"compatOptions"],[48,31,72,15],[48,51,72,18,"compatOptions"],[48,64,72,31],[48,65,72,33,"screens"],[48,72,72,2],[49,0,74,2],[49,8,74,6,"remaining"],[49,17,74,15],[49,20,74,18,"path"],[49,24,74,22],[49,25,75,5,"replace"],[49,32,74,18],[49,33,75,13],[49,39,74,18],[49,41,75,21],[49,44,74,18],[49,46,76,5,"replace"],[49,53,74,18],[49,54,76,13],[49,59,74,18],[49,61,76,20],[49,63,74,18],[49,65,77,5,"replace"],[49,72,74,18],[49,73,77,13],[49,80,74,18],[49,82,77,22],[49,84,74,18],[49,85,74,2],[50,0,80,2,"remaining"],[50,4,80,2,"remaining"],[50,13,80,11],[50,16,80,14,"remaining"],[50,25,80,23],[50,26,80,24,"endsWith"],[50,34,80,14],[50,35,80,33],[50,38,80,14],[50,42,80,40,"remaining"],[50,51,80,14],[50,54,80,55,"remaining"],[50,63,80,14],[50,69,80,2],[52,0,82,2],[52,8,82,6,"screens"],[52,15,82,13],[52,20,82,18,"undefined"],[52,29,82,2],[52,31,82,29],[53,0,84,4],[53,10,84,10,"routes"],[53,16,84,16],[53,19,84,19,"remaining"],[53,28,84,28],[53,29,85,7,"split"],[53,34,84,19],[53,35,85,13],[53,38,84,19],[53,40,86,7,"filter"],[53,46,84,19],[53,47,86,14,"Boolean"],[53,54,84,19],[53,56,87,7,"map"],[53,59,84,19],[53,60,87,11],[53,70,87,12,"segment"],[53,77,87,11],[53,79,87,21,"i"],[53,80,87,11],[53,82,87,24,"self"],[53,86,87,11],[53,88,87,33],[54,0,88,8],[54,12,88,14,"name"],[54,16,88,18],[54,19,88,21,"decodeURIComponent"],[54,37,88,39],[54,38,88,40,"segment"],[54,45,88,39],[54,46,88,8],[56,0,90,8],[56,12,90,12,"i"],[56,13,90,13],[56,18,90,18,"self"],[56,22,90,22],[56,23,90,23,"length"],[56,29,90,18],[56,32,90,32],[56,33,90,8],[56,35,90,35],[57,0,91,10],[57,17,91,17],[58,0,91,19,"name"],[58,12,91,19,"name"],[58,16,91,23],[58,18,91,19,"name"],[58,22,91,17],[59,0,91,25,"params"],[59,12,91,25,"params"],[59,18,91,31],[59,20,91,33,"parseQueryParams"],[59,36,91,49],[59,37,91,50,"path"],[59,41,91,49],[60,0,91,17],[60,11,91,10],[61,0,92,9],[63,0,94,8],[63,15,94,15],[64,0,94,17,"name"],[64,10,94,17,"name"],[64,14,94,21],[64,16,94,17,"name"],[65,0,94,15],[65,9,94,8],[66,0,95,7],[66,7,84,19],[66,8,84,4],[68,0,97,4],[68,10,97,8,"routes"],[68,16,97,14],[68,17,97,15,"length"],[68,23,97,4],[68,25,97,23],[69,0,98,6],[69,15,98,13,"createNestedStateObject"],[69,38,98,36],[69,39,98,37,"routes"],[69,45,98,36],[69,47,98,45,"initialRoutes"],[69,60,98,36],[69,61,98,6],[70,0,99,5],[72,0,101,4],[72,13,101,11,"undefined"],[72,22,101,4],[73,0,102,3],[75,0,105,2],[75,8,105,8,"configs"],[75,15,105,15],[75,18,105,18],[75,26,105,19],[75,28,105,18],[75,30,106,5,"concat"],[75,36,105,18],[75,82,107,9,"Object"],[75,88,107,15],[75,89,107,16,"keys"],[75,93,107,9],[75,94,107,21,"screens"],[75,101,107,9],[75,103,107,30,"map"],[75,106,107,9],[75,107,107,34],[75,117,107,35,"key"],[75,120,107,34],[76,0,107,34],[76,13,108,8,"createNormalizedConfigs"],[76,36,108,31],[76,37,109,10,"legacy"],[76,43,108,31],[76,45,110,10,"key"],[76,48,108,31],[76,50,111,10,"screens"],[76,57,108,31],[76,59,112,10],[76,61,108,31],[76,63,113,10,"initialRoutes"],[76,76,108,31],[76,77,107,34],[77,0,107,34],[77,5,107,9],[77,6,105,18],[77,9,117,5,"sort"],[77,13,105,18],[77,14,117,10],[77,24,117,11,"a"],[77,25,117,10],[77,27,117,14,"b"],[77,28,117,10],[77,30,117,20],[78,0,124,6],[78,10,124,10,"a"],[78,11,124,11],[78,12,124,12,"pattern"],[78,19,124,10],[78,20,124,20,"startsWith"],[78,30,124,10],[78,31,124,31,"b"],[78,32,124,32],[78,33,124,33,"pattern"],[78,40,124,10],[78,41,124,6],[78,43,124,43],[79,0,125,8],[79,15,125,15],[79,16,125,8],[80,0,126,7],[82,0,128,6],[82,10,128,10,"b"],[82,11,128,11],[82,12,128,12,"pattern"],[82,19,128,10],[82,20,128,20,"startsWith"],[82,30,128,10],[82,31,128,31,"a"],[82,32,128,32],[82,33,128,33,"pattern"],[82,40,128,10],[82,41,128,6],[82,43,128,43],[83,0,129,8],[83,15,129,15],[83,16,129,8],[84,0,130,7],[86,0,132,6],[86,10,132,12,"aParts"],[86,16,132,18],[86,19,132,21,"a"],[86,20,132,22],[86,21,132,23,"pattern"],[86,28,132,21],[86,29,132,31,"split"],[86,34,132,21],[86,35,132,37],[86,38,132,21],[86,39,132,6],[87,0,133,6],[87,10,133,12,"bParts"],[87,16,133,18],[87,19,133,21,"b"],[87,20,133,22],[87,21,133,23,"pattern"],[87,28,133,21],[87,29,133,31,"split"],[87,34,133,21],[87,35,133,37],[87,38,133,21],[87,39,133,6],[88,0,135,6],[88,10,135,12,"aWildcardIndex"],[88,24,135,26],[88,27,135,29,"aParts"],[88,33,135,35],[88,34,135,36,"indexOf"],[88,41,135,29],[88,42,135,44],[88,45,135,29],[88,46,135,6],[89,0,136,6],[89,10,136,12,"bWildcardIndex"],[89,24,136,26],[89,27,136,29,"bParts"],[89,33,136,35],[89,34,136,36,"indexOf"],[89,41,136,29],[89,42,136,44],[89,45,136,29],[89,46,136,6],[91,0,139,6],[91,10,139,10,"aWildcardIndex"],[91,24,139,24],[91,29,139,29],[91,30,139,30],[91,31,139,10],[91,35,139,35,"bWildcardIndex"],[91,49,139,49],[91,54,139,54],[91,55,139,55],[91,56,139,6],[91,58,139,58],[92,0,140,8],[92,15,140,15],[92,16,140,16],[92,17,140,8],[93,0,141,7],[95,0,143,6],[95,10,143,10,"aWildcardIndex"],[95,24,143,24],[95,29,143,29],[95,30,143,30],[95,31,143,10],[95,35,143,35,"bWildcardIndex"],[95,49,143,49],[95,54,143,54],[95,55,143,55],[95,56,143,6],[95,58,143,58],[96,0,144,8],[96,15,144,15],[96,16,144,8],[97,0,145,7],[99,0,147,6],[99,10,147,10,"aWildcardIndex"],[99,24,147,24],[99,29,147,29,"bWildcardIndex"],[99,43,147,6],[99,45,147,45],[100,0,150,8],[100,15,150,15,"bParts"],[100,21,150,21],[100,22,150,22,"length"],[100,28,150,15],[100,31,150,31,"aParts"],[100,37,150,37],[100,38,150,38,"length"],[100,44,150,8],[101,0,151,7],[103,0,155,6],[103,13,155,13,"bWildcardIndex"],[103,27,155,27],[103,30,155,30,"aWildcardIndex"],[103,44,155,6],[104,0,156,5],[104,5,105,18],[104,6,105,2],[106,0,158,2],[106,8,158,6,"remaining"],[106,17,158,15],[106,22,158,20],[106,25,158,2],[106,27,158,25],[107,0,161,4],[107,10,161,10,"match"],[107,15,161,15],[107,18,161,18,"configs"],[107,25,161,25],[107,26,161,26,"find"],[107,30,161,18],[107,31,162,6],[107,41,162,7,"config"],[107,47,162,6],[108,0,162,6],[108,15,163,8,"config"],[108,21,163,14],[108,22,163,15,"path"],[108,26,163,8],[108,31,163,24],[108,33,163,8],[108,37,164,8,"config"],[108,43,164,14],[108,44,164,15,"routeNames"],[108,54,164,8],[108,55,164,26,"every"],[108,60,164,8],[108,61,166,10],[108,71,166,11,"name"],[108,75,166,10],[109,0,166,10],[111,0,166,10],[111,17,166,20],[111,36,166,21,"configs"],[111,43,166,28],[111,44,166,29,"find"],[111,48,166,21],[111,49,166,34],[111,59,166,35,"c"],[111,60,166,34],[112,0,166,34],[112,19,166,41,"c"],[112,20,166,42],[112,21,166,43,"screen"],[112,27,166,41],[112,32,166,54,"name"],[112,36,166,34],[113,0,166,34],[113,11,166,21],[113,12,166,20],[113,33,166,21],[113,47,166,61,"path"],[113,51,166,20],[113,52,166,10],[114,0,166,10],[114,9,164,8],[114,10,162,6],[115,0,162,6],[115,7,161,18],[115,8,161,4],[117,0,170,4],[117,10,170,8,"match"],[117,15,170,4],[117,17,170,15],[118,0,171,6],[118,15,171,13,"createNestedStateObject"],[118,38,171,36],[118,39,172,8,"match"],[118,44,172,13],[118,45,172,14,"routeNames"],[118,55,172,8],[118,56,172,25,"map"],[118,59,172,8],[118,60,172,29],[118,70,172,30,"name"],[118,74,172,29],[118,76,172,36,"i"],[118,77,172,29],[118,79,172,39,"self"],[118,83,172,29],[118,85,172,48],[119,0,173,10],[119,14,173,14,"i"],[119,15,173,15],[119,20,173,20,"self"],[119,24,173,24],[119,25,173,25,"length"],[119,31,173,20],[119,34,173,34],[119,35,173,10],[119,37,173,37],[120,0,174,12],[120,19,174,19],[121,0,174,21,"name"],[121,14,174,21,"name"],[121,18,174,25],[121,20,174,21,"name"],[121,24,174,19],[122,0,174,27,"params"],[122,14,174,27,"params"],[122,20,174,33],[122,22,174,35,"parseQueryParams"],[122,38,174,51],[122,39,174,52,"path"],[122,43,174,51],[122,45,174,58,"match"],[122,50,174,63],[122,51,174,64,"parse"],[122,56,174,51],[123,0,174,19],[123,13,174,12],[124,0,175,11],[126,0,177,10],[126,17,177,17],[127,0,177,19,"name"],[127,12,177,19,"name"],[127,16,177,23],[127,18,177,19,"name"],[128,0,177,17],[128,11,177,10],[129,0,178,9],[129,9,172,8],[129,10,171,36],[129,12,179,8,"initialRoutes"],[129,25,171,36],[129,26,171,6],[130,0,181,5],[132,0,183,4],[132,13,183,11,"undefined"],[132,22,183,4],[133,0,184,3],[135,0,186,2],[135,8,186,6,"result"],[135,14,186,2],[136,0,187,2],[136,8,187,6,"current"],[136,15,187,2],[138,0,189,2],[138,8,189,6,"legacy"],[138,14,189,12],[138,19,189,17],[138,24,189,2],[138,26,189,24],[139,0,189,24],[139,33,192,53,"matchAgainstConfigs"],[139,52,192,72],[139,53,193,6,"remaining"],[139,62,192,72],[139,64,194,6,"configs"],[139,71,194,13],[139,72,194,14,"map"],[139,75,194,6],[139,76,194,18],[139,86,194,19,"c"],[139,87,194,18],[140,0,194,18],[140,47,195,11,"c"],[140,48,194,18],[141,0,197,8,"regex"],[141,10,197,8,"regex"],[141,15,197,13],[141,17,197,15,"c"],[141,18,197,16],[141,19,197,17,"regex"],[141,24,197,15],[141,27,197,25],[141,31,197,29,"RegExp"],[141,37,197,25],[141,38,197,36,"c"],[141,39,197,37],[141,40,197,38,"regex"],[141,45,197,36],[141,46,197,44,"source"],[141,52,197,36],[141,55,197,53],[141,58,197,25],[141,59,197,15],[141,62,197,60,"undefined"],[142,0,194,18],[143,0,194,18],[143,7,194,6],[143,8,192,72],[143,9,189,24],[144,0,189,24],[144,10,192,12,"routeNames"],[144,20,189,24],[144,44,192,12,"routeNames"],[144,54,189,24],[145,0,189,24],[145,10,192,24,"allParams"],[145,19,189,24],[145,43,192,24,"allParams"],[145,52,189,24],[146,0,189,24],[146,10,192,35,"remainingPath"],[146,23,189,24],[146,47,192,35,"remainingPath"],[146,60,189,24],[148,0,201,4],[148,10,201,8,"routeNames"],[148,20,201,18],[148,25,201,23,"undefined"],[148,34,201,4],[148,36,201,34],[149,0,203,6,"remaining"],[149,8,203,6,"remaining"],[149,17,203,15],[149,20,203,18,"remainingPath"],[149,33,203,6],[150,0,204,6,"current"],[150,8,204,6,"current"],[150,15,204,13],[150,18,204,16,"createNestedStateObject"],[150,41,204,39],[150,42,205,8,"createRouteObjects"],[150,60,205,26],[150,61,205,27,"configs"],[150,68,205,26],[150,70,205,36,"routeNames"],[150,80,205,26],[150,82,205,48,"allParams"],[150,91,205,26],[150,92,204,39],[150,94,206,8,"initialRoutes"],[150,107,204,39],[150,108,204,6],[151,0,208,6,"result"],[151,8,208,6,"result"],[151,14,208,12],[151,17,208,15,"current"],[151,24,208,6],[152,0,209,5],[153,0,210,3],[153,5,189,2],[153,11,210,9],[154,0,213,4],[154,13,213,11,"remaining"],[154,22,213,4],[154,24,213,22],[155,0,213,22],[155,36,214,53,"matchAgainstConfigs"],[155,55,214,72],[155,56,215,8,"remaining"],[155,65,214,72],[155,67,216,8,"configs"],[155,74,214,72],[155,75,213,22],[156,0,213,22],[156,12,214,12,"routeNames"],[156,23,213,22],[156,48,214,12,"routeNames"],[156,58,213,22],[157,0,213,22],[157,12,214,24,"allParams"],[157,22,213,22],[157,47,214,24,"allParams"],[157,56,213,22],[158,0,213,22],[158,12,214,35,"remainingPath"],[158,26,213,22],[158,51,214,35,"remainingPath"],[158,64,213,22],[160,0,219,6,"remaining"],[160,8,219,6,"remaining"],[160,17,219,15],[160,20,219,18,"remainingPath"],[160,34,219,6],[162,0,222,6],[162,12,222,10,"routeNames"],[162,23,222,20],[162,28,222,25,"undefined"],[162,37,222,6],[162,39,222,36],[163,0,223,8],[163,14,223,14,"segments"],[163,22,223,22],[163,25,223,25,"remaining"],[163,34,223,34],[163,35,223,35,"split"],[163,40,223,25],[163,41,223,41],[163,44,223,25],[163,45,223,8],[164,0,225,8,"routeNames"],[164,10,225,8,"routeNames"],[164,21,225,18],[164,24,225,21],[164,25,225,22,"decodeURIComponent"],[164,43,225,40],[164,44,225,41,"segments"],[164,52,225,49],[164,53,225,50],[164,54,225,49],[164,55,225,40],[164,56,225,21],[164,57,225,8],[165,0,226,8,"segments"],[165,10,226,8,"segments"],[165,18,226,16],[165,19,226,17,"shift"],[165,24,226,8],[166,0,227,8,"remaining"],[166,10,227,8,"remaining"],[166,19,227,17],[166,22,227,20,"segments"],[166,30,227,28],[166,31,227,29,"join"],[166,35,227,20],[166,36,227,34],[166,39,227,20],[166,40,227,8],[167,0,228,7],[169,0,230,6],[169,12,230,12,"state"],[169,17,230,17],[169,20,230,20,"createNestedStateObject"],[169,43,230,43],[169,44,231,8,"createRouteObjects"],[169,62,231,26],[169,63,231,27,"configs"],[169,70,231,26],[169,72,231,36,"routeNames"],[169,83,231,26],[169,85,231,48,"allParams"],[169,95,231,26],[169,96,230,43],[169,98,232,8,"initialRoutes"],[169,111,230,43],[169,112,230,6],[171,0,235,6],[171,12,235,10,"current"],[171,19,235,6],[171,21,235,19],[172,0,235,19],[174,0,237,8],[174,29,237,15,"current"],[174,36,237,8],[174,57,237,15],[174,66,237,24,"routes"],[174,72,237,15],[174,73,237,31,"current"],[174,80,237,38],[174,81,237,39,"index"],[174,86,237,31],[174,90,237,48],[174,91,237,15],[174,93,237,51,"state"],[174,98,237,8],[174,100,237,58],[175,0,237,58],[177,0,238,10,"current"],[177,12,238,10,"current"],[177,19,238,17],[177,22,238,20,"current"],[177,29,238,27],[177,30,238,28,"routes"],[177,36,238,20],[177,37,238,35,"current"],[177,44,238,42],[177,45,238,43,"index"],[177,50,238,35],[177,54,238,52],[177,55,238,20],[177,57,238,55,"state"],[177,62,238,10],[178,0,239,9],[180,0,241,9,"current"],[180,10,241,9,"current"],[180,17,241,8],[180,18,241,51,"routes"],[180,24,241,8],[180,25,242,10],[180,39,242,10,"current"],[180,46,242,17],[180,55,242,10],[180,77,242,19,"index"],[180,82,242,10],[180,87,242,28],[180,88,241,8],[180,90,243,10,"state"],[180,95,241,8],[180,98,243,18,"state"],[180,103,241,8],[181,0,244,7],[181,9,235,6],[181,15,244,13],[182,0,245,8,"result"],[182,10,245,8,"result"],[182,16,245,14],[182,19,245,17,"state"],[182,24,245,8],[183,0,246,7],[185,0,248,6,"current"],[185,8,248,6,"current"],[185,15,248,13],[185,18,248,16,"state"],[185,23,248,6],[186,0,249,5],[187,0,250,3],[189,0,252,2],[189,8,252,6,"current"],[189,15,252,13],[189,19,252,17],[189,23,252,6],[189,27,252,25,"result"],[189,33,252,31],[189,37,252,35],[189,41,252,2],[189,43,252,41],[190,0,253,4],[190,13,253,11,"undefined"],[190,22,253,4],[191,0,254,3],[193,0,256,2],[193,8,256,8,"route"],[193,13,256,13],[193,16,256,16,"findFocusedRoute"],[193,32,256,32],[193,33,256,33,"current"],[193,40,256,32],[193,41,256,2],[194,0,257,2],[194,8,257,8,"params"],[194,14,257,14],[194,17,257,17,"parseQueryParams"],[194,33,257,33],[194,34,258,4,"path"],[194,38,257,33],[194,40,259,4,"findParseConfigForRoute"],[194,63,259,27],[194,64,259,28,"route"],[194,69,259,33],[194,70,259,34,"name"],[194,74,259,27],[194,76,259,40,"configs"],[194,83,259,27],[194,84,257,33],[194,85,257,2],[196,0,262,2],[196,8,262,6,"params"],[196,14,262,2],[196,16,262,14],[197,0,263,4,"route"],[197,6,263,4,"route"],[197,11,263,9],[197,12,263,10,"params"],[197,18,263,4],[197,53,263,24,"route"],[197,58,263,29],[197,59,263,30,"params"],[197,65,263,4],[197,68,263,41,"params"],[197,74,263,4],[198,0,264,3],[200,0,266,2],[200,11,266,9,"result"],[200,17,266,2],[201,0,267,1],[203,0,269,0],[203,6,269,6,"joinPaths"],[203,15,269,15],[203,18,269,18],[203,27,269,6,"joinPaths"],[203,36,269,18],[204,0,269,18],[206,0,269,18],[206,38,269,22,"paths"],[206,43,269,18],[207,0,269,22,"paths"],[207,6,269,22,"paths"],[207,11,269,18],[208,0,269,18],[210,0,269,18],[210,11,270,2],[210,20,270,3],[210,22,270,2],[210,24,271,5,"concat"],[210,30,270,2],[210,77,271,15,"paths"],[210,82,271,20],[210,83,271,21,"map"],[210,86,271,15],[210,87,271,25],[210,97,271,26,"p"],[210,98,271,25],[211,0,271,25],[211,13,271,32,"p"],[211,14,271,33],[211,15,271,34,"split"],[211,20,271,32],[211,21,271,40],[211,24,271,32],[211,25,271,25],[212,0,271,25],[212,5,271,15],[212,6,270,2],[212,9,272,5,"filter"],[212,15,270,2],[212,16,272,12,"Boolean"],[212,23,270,2],[212,25,273,5,"join"],[212,29,270,2],[212,30,273,10],[212,33,270,2],[212,34,269,18],[213,0,269,18],[213,3,269,0],[215,0,275,0],[215,6,275,6,"matchAgainstConfigs"],[215,25,275,25],[215,28,275,28],[215,37,275,6,"matchAgainstConfigs"],[215,56,275,28],[215,57,275,29,"remaining"],[215,66,275,28],[215,68,275,48,"configs"],[215,75,275,28],[215,77,275,75],[216,0,276,2],[216,8,276,6,"routeNames"],[216,18,276,2],[217,0,277,2],[217,8,277,6,"allParams"],[217,17,277,2],[218,0,278,2],[218,8,278,6,"remainingPath"],[218,21,278,19],[218,24,278,22,"remaining"],[218,33,278,2],[220,0,275,75],[220,33,281,13,"config"],[220,39,275,75],[221,0,282,4],[221,10,282,8],[221,11,282,9,"config"],[221,17,282,15],[221,18,282,16,"regex"],[221,23,282,4],[221,25,282,23],[222,0,283,6],[223,0,284,5],[225,0,286,4],[225,10,286,10,"match"],[225,15,286,15],[225,18,286,18,"remainingPath"],[225,31,286,31],[225,32,286,32,"match"],[225,37,286,18],[225,38,286,38,"config"],[225,44,286,44],[225,45,286,45,"regex"],[225,50,286,18],[225,51,286,4],[227,0,289,4],[227,10,289,8,"match"],[227,15,289,4],[227,17,289,15],[228,0,290,6,"routeNames"],[228,8,290,6,"routeNames"],[228,18,290,16],[228,54,290,23,"config"],[228,60,290,29],[228,61,290,30,"routeNames"],[228,71,290,16],[228,72,290,6],[229,0,292,6],[229,12,292,12,"paramPatterns"],[229,25,292,25],[229,28,292,28,"config"],[229,34,292,34],[229,35,292,35,"pattern"],[229,42,292,28],[229,43,293,9,"split"],[229,48,292,28],[229,49,293,15],[229,52,292,28],[229,54,294,9,"filter"],[229,60,292,28],[229,61,294,16],[229,71,294,17,"p"],[229,72,294,16],[230,0,294,16],[230,17,294,23,"p"],[230,18,294,24],[230,19,294,25,"startsWith"],[230,29,294,23],[230,30,294,36],[230,33,294,23],[230,34,294,16],[231,0,294,16],[231,9,292,28],[231,10,292,6],[233,0,296,6],[233,12,296,10,"paramPatterns"],[233,25,296,23],[233,26,296,24,"length"],[233,32,296,6],[233,34,296,32],[234,0,297,8,"allParams"],[234,10,297,8,"allParams"],[234,19,297,17],[234,22,297,20,"paramPatterns"],[234,35,297,33],[234,36,297,34,"reduce"],[234,42,297,20],[234,43,297,62],[234,53,297,63,"acc"],[234,56,297,62],[234,58,297,68,"p"],[234,59,297,62],[234,61,297,71,"i"],[234,62,297,62],[234,64,297,77],[235,0,298,10],[235,16,298,16,"value"],[235,21,298,21],[235,24,298,24,"match"],[235,29,298,29],[235,30,298,31],[235,31,298,32,"i"],[235,32,298,33],[235,35,298,36],[235,36,298,31],[235,40,298,41],[235,41,298,29],[235,42,298,24],[235,43,298,44,"replace"],[235,50,298,24],[235,51,298,52],[235,55,298,24],[235,57,298,58],[235,59,298,24],[235,60,298,10],[236,0,300,10,"acc"],[236,12,300,10,"acc"],[236,15,300,13],[236,16,300,14,"p"],[236,17,300,13],[236,18,300,10],[236,21,300,19,"value"],[236,26,300,10],[237,0,302,10],[237,19,302,17,"acc"],[237,22,302,10],[238,0,303,9],[238,11,297,20],[238,13,303,11],[238,15,297,20],[238,16,297,8],[239,0,304,7],[241,0,306,6,"remainingPath"],[241,8,306,6,"remainingPath"],[241,21,306,19],[241,24,306,22,"remainingPath"],[241,37,306,35],[241,38,306,36,"replace"],[241,45,306,22],[241,46,306,44,"match"],[241,51,306,49],[241,52,306,50],[241,53,306,49],[241,54,306,22],[241,56,306,54],[241,58,306,22],[241,59,306,6],[242,0,308,6],[243,0,309,5],[244,0,275,75],[246,0,275,75],[246,11,281,2],[246,64,281,23,"configs"],[246,71,281,2],[246,111,281,32],[247,0,281,32],[247,10,281,13,"config"],[247,16,281,32],[249,0,281,32],[249,24,281,13,"config"],[249,30,281,32],[251,0,281,32],[252,0,281,32],[253,0,283,6],[255,0,281,32],[256,0,308,6],[257,0,281,32],[258,0,310,3],[260,0,312,2],[260,11,312,9],[261,0,312,11,"routeNames"],[261,6,312,11,"routeNames"],[261,16,312,21],[261,18,312,11,"routeNames"],[261,28,312,9],[262,0,312,23,"allParams"],[262,6,312,23,"allParams"],[262,15,312,32],[262,17,312,23,"allParams"],[262,26,312,9],[263,0,312,34,"remainingPath"],[263,6,312,34,"remainingPath"],[263,19,312,47],[263,21,312,34,"remainingPath"],[264,0,312,9],[264,5,312,2],[265,0,313,1],[265,3,275,0],[267,0,315,0],[267,6,315,6,"createNormalizedConfigs"],[267,29,315,29],[267,32,315,32],[267,41,315,6,"createNormalizedConfigs"],[267,64,315,32],[267,65,316,2,"legacy"],[267,71,315,32],[267,73,317,2,"screen"],[267,79,315,32],[267,81,318,2,"routeConfig"],[267,92,315,32],[267,94,322,20],[268,0,322,20],[268,8,319,2,"routeNames"],[268,18,322,20],[268,89,319,25],[268,91,322,20],[269,0,322,20],[269,8,320,2,"initials"],[269,16,322,20],[270,0,322,20],[270,8,321,2,"parentPattern"],[270,21,322,20],[271,0,323,2],[271,8,323,8,"configs"],[271,15,323,30],[271,18,323,33],[271,20,323,2],[272,0,325,2,"routeNames"],[272,4,325,2,"routeNames"],[272,14,325,12],[272,15,325,13,"push"],[272,19,325,2],[272,20,325,18,"screen"],[272,26,325,2],[273,0,327,2],[273,8,327,8,"config"],[273,14,327,14],[273,17,327,17,"routeConfig"],[273,28,327,28],[273,29,327,29,"screen"],[273,35,327,28],[273,36,327,2],[275,0,329,2],[275,8,329,6],[275,15,329,13,"config"],[275,21,329,6],[275,26,329,24],[275,34,329,2],[275,36,329,34],[276,0,331,4],[276,10,331,10,"pattern"],[276,17,331,17],[276,20,331,20,"parentPattern"],[276,33,331,33],[276,36,331,36,"joinPaths"],[276,45,331,45],[276,46,331,46,"parentPattern"],[276,59,331,45],[276,61,331,61,"config"],[276,67,331,45],[276,68,331,33],[276,71,331,71,"config"],[276,77,331,4],[277,0,333,4,"configs"],[277,6,333,4,"configs"],[277,13,333,11],[277,14,333,12,"push"],[277,18,333,4],[277,19,333,17,"createConfigItem"],[277,35,333,33],[277,36,333,34,"legacy"],[277,42,333,33],[277,44,333,42,"screen"],[277,50,333,33],[277,52,333,50,"routeNames"],[277,62,333,33],[277,64,333,62,"pattern"],[277,71,333,33],[277,73,333,71,"config"],[277,79,333,33],[277,80,333,4],[278,0,334,3],[278,5,329,2],[278,11,334,9],[278,15,334,13],[278,22,334,20,"config"],[278,28,334,13],[278,33,334,31],[278,41,334,9],[278,43,334,41],[279,0,335,4],[279,10,335,8,"pattern"],[279,18,335,4],[281,0,340,4],[281,10,340,8],[281,17,340,15,"config"],[281,23,340,21],[281,24,340,22,"path"],[281,28,340,8],[281,33,340,31],[281,41,340,4],[281,43,340,41],[282,0,341,6],[282,12,341,10,"legacy"],[282,18,341,6],[282,20,341,18],[283,0,342,8,"pattern"],[283,10,342,8,"pattern"],[283,18,342,15],[283,21,343,10,"config"],[283,27,343,16],[283,28,343,17,"exact"],[283,33,343,10],[283,38,343,27],[283,42,343,10],[283,46,343,35,"parentPattern"],[283,59,343,10],[283,62,344,14,"joinPaths"],[283,71,344,23],[283,72,344,24,"parentPattern"],[283,85,344,23],[283,87,344,39,"config"],[283,93,344,45],[283,94,344,46,"path"],[283,98,344,23],[283,99,343,10],[283,102,345,14,"config"],[283,108,345,20],[283,109,345,21,"path"],[283,113,342,8],[284,0,346,7],[284,9,341,6],[284,15,346,13],[285,0,347,8],[285,14,347,12,"config"],[285,20,347,18],[285,21,347,19,"exact"],[285,26,347,12],[285,30,347,28,"config"],[285,36,347,34],[285,37,347,35,"path"],[285,41,347,28],[285,46,347,44,"undefined"],[285,55,347,8],[285,57,347,55],[286,0,348,10],[286,18,348,16],[286,22,348,20,"Error"],[286,27,348,16],[286,28,349,12],[286,178,348,16],[286,179,348,10],[287,0,351,9],[289,0,353,8,"pattern"],[289,10,353,8,"pattern"],[289,18,353,15],[289,21,354,10,"config"],[289,27,354,16],[289,28,354,17,"exact"],[289,33,354,10],[289,38,354,27],[289,42,354,10],[289,45,355,14,"joinPaths"],[289,54,355,23],[289,55,355,24,"parentPattern"],[289,68,355,37],[289,72,355,41],[289,74,355,23],[289,76,355,45,"config"],[289,82,355,51],[289,83,355,52,"path"],[289,87,355,45],[289,91,355,60],[289,93,355,23],[289,94,354,10],[289,97,356,14,"config"],[289,103,356,20],[289,104,356,21,"path"],[289,108,356,14],[289,112,356,29],[289,114,353,8],[290,0,357,7],[292,0,359,6,"configs"],[292,8,359,6,"configs"],[292,15,359,13],[292,16,359,14,"push"],[292,20,359,6],[292,21,360,8,"createConfigItem"],[292,37,360,24],[292,38,361,10,"legacy"],[292,44,360,24],[292,46,362,10,"screen"],[292,52,360,24],[292,54,363,10,"routeNames"],[292,64,360,24],[292,66,364,10,"pattern"],[292,74,360,24],[292,76,365,10,"config"],[292,82,365,16],[292,83,365,17,"path"],[292,87,360,24],[292,89,366,10,"config"],[292,95,366,16],[292,96,366,17,"parse"],[292,101,360,24],[292,102,359,6],[293,0,369,5],[295,0,371,4],[295,10,371,8,"config"],[295,16,371,14],[295,17,371,15,"screens"],[295,24,371,4],[295,26,371,24],[296,0,373,6],[296,12,373,10,"config"],[296,18,373,16],[296,19,373,17,"initialRouteName"],[296,35,373,6],[296,37,373,35],[297,0,374,8,"initials"],[297,10,374,8,"initials"],[297,18,374,16],[297,19,374,17,"push"],[297,23,374,8],[297,24,374,22],[298,0,375,10,"initialRouteName"],[298,12,375,10,"initialRouteName"],[298,28,375,26],[298,30,375,28,"config"],[298,36,375,34],[298,37,375,35,"initialRouteName"],[298,53,374,22],[299,0,376,10,"connectedRoutes"],[299,12,376,10,"connectedRoutes"],[299,27,376,25],[299,29,376,27,"Object"],[299,35,376,33],[299,36,376,34,"keys"],[299,40,376,27],[299,41,376,39,"config"],[299,47,376,45],[299,48,376,46,"screens"],[299,55,376,27],[300,0,374,22],[300,11,374,8],[301,0,378,7],[303,0,380,6,"Object"],[303,8,380,6,"Object"],[303,14,380,12],[303,15,380,13,"keys"],[303,19,380,6],[303,20,380,18,"config"],[303,26,380,24],[303,27,380,25,"screens"],[303,34,380,6],[303,36,380,34,"forEach"],[303,43,380,6],[303,44,380,42],[303,54,380,43,"nestedConfig"],[303,66,380,42],[303,68,380,60],[304,0,380,60],[306,0,381,8],[306,14,381,14,"result"],[306,20,381,20],[306,23,381,23,"createNormalizedConfigs"],[306,46,381,46],[306,47,382,10,"legacy"],[306,53,381,46],[306,55,383,10,"nestedConfig"],[306,67,381,46],[306,69,384,10,"config"],[306,75,384,16],[306,76,384,17,"screens"],[306,83,381,46],[306,85,385,10,"routeNames"],[306,95,381,46],[306,97,386,10,"initials"],[306,105,381,46],[306,120,387,10,"pattern"],[306,128,381,46],[306,152,387,21,"parentPattern"],[306,165,381,46],[306,166,381,8],[307,0,390,8,"configs"],[307,10,390,8,"configs"],[307,17,390,15],[307,18,390,16,"push"],[307,22,390,8],[307,29,390,8,"configs"],[307,36,390,15],[307,71,390,24,"result"],[307,77,390,15],[307,79,390,8],[308,0,391,7],[308,9,380,6],[309,0,392,5],[310,0,393,3],[312,0,395,2,"routeNames"],[312,4,395,2,"routeNames"],[312,14,395,12],[312,15,395,13,"pop"],[312,18,395,2],[313,0,397,2],[313,11,397,9,"configs"],[313,18,397,2],[314,0,398,1],[314,3,315,0],[316,0,400,0],[316,6,400,6,"createConfigItem"],[316,22,400,22],[316,25,400,25],[316,34,400,6,"createConfigItem"],[316,50,400,25],[316,51,401,2,"legacy"],[316,57,400,25],[316,59,402,2,"screen"],[316,65,400,25],[316,67,403,2,"routeNames"],[316,77,400,25],[316,79,404,2,"pattern"],[316,86,400,25],[316,88,405,2,"path"],[316,92,400,25],[316,94,406,2,"parse"],[316,99,400,25],[316,101,407,18],[317,0,409,2,"pattern"],[317,4,409,2,"pattern"],[317,11,409,9],[317,14,409,12,"pattern"],[317,21,409,19],[317,22,409,20,"split"],[317,27,409,12],[317,28,409,26],[317,31,409,12],[317,33,409,31,"filter"],[317,39,409,12],[317,40,409,38,"Boolean"],[317,47,409,12],[317,49,409,47,"join"],[317,53,409,12],[317,54,409,52],[317,57,409,12],[317,58,409,2],[318,0,411,2],[318,8,411,8,"regex"],[318,13,411,13],[318,16,411,16,"pattern"],[318,23,411,23],[318,26,412,6],[318,30,412,10,"RegExp"],[318,36,412,6],[318,44,413,13,"pattern"],[318,51,413,20],[318,52,414,11,"split"],[318,57,413,13],[318,58,414,17],[318,61,413,13],[318,63,415,11,"map"],[318,66,413,13],[318,67,415,15],[318,77,415,16,"it"],[318,79,415,15],[318,81,415,23],[319,0,416,12],[319,10,416,16,"legacy"],[319,16,416,22],[319,20,416,26,"it"],[319,22,416,28],[319,27,416,33],[319,30,416,12],[319,32,416,38],[320,0,417,14],[320,14,417,20],[320,18,417,24,"Error"],[320,23,417,20],[320,24,418,16],[320,168,417,20],[320,169,417,14],[321,0,420,13],[323,0,422,12],[323,10,422,16,"it"],[323,12,422,18],[323,13,422,19,"startsWith"],[323,23,422,16],[323,24,422,30],[323,27,422,16],[323,28,422,12],[323,30,422,36],[324,0,423,14],[324,32,423,35,"it"],[324,34,423,37],[324,35,423,38,"endsWith"],[324,43,423,35],[324,44,423,47],[324,47,423,35],[324,51,423,54],[324,54,423,35],[324,57,423,60],[324,59,423,14],[325,0,424,13],[327,0,426,12],[327,14,426,22,"it"],[327,16,426,24],[327,21,426,29],[327,24,426,22],[327,27,426,35],[327,31,426,22],[327,34,426,42],[327,67,426,49,"it"],[327,69,426,42],[327,70,426,12],[328,0,427,11],[328,5,413,13],[328,7,428,11,"join"],[328,11,413,13],[328,12,428,16],[328,14,413,13],[328,15,412,6],[328,22,411,23],[328,25,430,6,"undefined"],[328,34,411,2],[329,0,432,2],[329,11,432,9],[330,0,433,4,"screen"],[330,6,433,4,"screen"],[330,12,433,10],[330,14,433,4,"screen"],[330,20,432,9],[331,0,434,4,"regex"],[331,6,434,4,"regex"],[331,11,434,9],[331,13,434,4,"regex"],[331,18,432,9],[332,0,435,4,"pattern"],[332,6,435,4,"pattern"],[332,13,435,11],[332,15,435,4,"pattern"],[332,22,432,9],[333,0,436,4,"path"],[333,6,436,4,"path"],[333,10,436,8],[333,12,436,4,"path"],[333,16,432,9],[334,0,438,4,"routeNames"],[334,6,438,4,"routeNames"],[334,16,438,14],[334,51,438,20,"routeNames"],[334,61,438,14],[334,62,432,9],[335,0,439,4,"parse"],[335,6,439,4,"parse"],[335,11,439,9],[335,13,439,4,"parse"],[336,0,432,9],[336,5,432,2],[337,0,441,1],[337,3,400,0],[339,0,443,0],[339,6,443,6,"findParseConfigForRoute"],[339,29,443,29],[339,32,443,32],[339,41,443,6,"findParseConfigForRoute"],[339,64,443,32],[339,65,444,2,"routeName"],[339,74,443,32],[339,76,445,2,"flatConfig"],[339,86,443,32],[339,88,446,30],[340,0,447,2],[340,58,447,23,"flatConfig"],[340,68,447,2],[340,111,447,35],[341,0,447,35],[341,10,447,13,"config"],[341,16,447,35],[343,0,448,4],[343,10,448,8,"routeName"],[343,19,448,17],[343,24,448,22,"config"],[343,30,448,28],[343,31,448,29,"routeNames"],[343,41,448,22],[343,42,448,40,"config"],[343,48,448,46],[343,49,448,47,"routeNames"],[343,59,448,40],[343,60,448,58,"length"],[343,66,448,40],[343,69,448,67],[343,70,448,22],[343,71,448,4],[343,73,448,71],[344,0,449,6],[344,15,449,13,"config"],[344,21,449,19],[344,22,449,20,"parse"],[344,27,449,6],[345,0,450,5],[346,0,451,3],[348,0,453,2],[348,11,453,9,"undefined"],[348,20,453,2],[349,0,454,1],[349,3,443,0],[351,0,457,0],[351,6,457,6,"findInitialRoute"],[351,22,457,22],[351,25,457,25],[351,34,457,6,"findInitialRoute"],[351,50,457,25],[351,51,458,2,"routeName"],[351,60,457,25],[351,62,459,2,"initialRoutes"],[351,75,457,25],[351,77,460,25],[352,0,461,2],[352,58,461,23,"initialRoutes"],[352,71,461,2],[352,114,461,38],[353,0,461,38],[353,10,461,13,"config"],[353,16,461,38],[355,0,462,4],[355,10,462,8,"config"],[355,16,462,14],[355,17,462,15,"connectedRoutes"],[355,32,462,8],[355,33,462,31,"includes"],[355,41,462,8],[355,42,462,40,"routeName"],[355,51,462,8],[355,52,462,4],[355,54,462,52],[356,0,463,6],[356,15,463,13,"config"],[356,21,463,19],[356,22,463,20,"initialRouteName"],[356,38,463,13],[356,43,463,41,"routeName"],[356,52,463,13],[356,55,464,10,"undefined"],[356,64,463,13],[356,67,465,10,"config"],[356,73,465,16],[356,74,465,17,"initialRouteName"],[356,90,463,6],[357,0,466,5],[358,0,467,3],[360,0,468,2],[360,11,468,9,"undefined"],[360,20,468,2],[361,0,469,1],[361,3,457,0],[363,0,473,0],[363,6,473,6,"createStateObject"],[363,23,473,23],[363,26,473,26],[363,35,473,6,"createStateObject"],[363,52,473,26],[363,53,474,2,"initialRoute"],[363,65,473,26],[363,67,475,2,"routeName"],[363,76,473,26],[363,78,476,2,"params"],[363,84,473,26],[363,86,477,2,"isEmpty"],[363,93,473,26],[363,95,478,19],[364,0,479,2],[364,8,479,6,"isEmpty"],[364,15,479,2],[364,17,479,15],[365,0,480,4],[365,10,480,8,"initialRoute"],[365,22,480,4],[365,24,480,22],[366,0,481,6],[366,15,481,13],[367,0,482,8,"index"],[367,10,482,8,"index"],[367,15,482,13],[367,17,482,15],[367,18,481,13],[368,0,483,8,"routes"],[368,10,483,8,"routes"],[368,16,483,14],[368,18,483,16],[368,19,483,17],[369,0,483,19,"name"],[369,12,483,19,"name"],[369,16,483,23],[369,18,483,25,"initialRoute"],[370,0,483,17],[370,11,483,16],[370,13,483,41],[371,0,483,43,"name"],[371,12,483,43,"name"],[371,16,483,47],[371,18,483,49,"routeName"],[371,27,483,41],[372,0,483,70,"params"],[372,12,483,70,"params"],[372,18,483,76],[372,20,483,70,"params"],[373,0,483,41],[373,11,483,16],[374,0,481,13],[374,9,481,6],[375,0,485,5],[375,7,480,4],[375,13,485,11],[376,0,486,6],[376,15,486,13],[377,0,487,8,"routes"],[377,10,487,8,"routes"],[377,16,487,14],[377,18,487,16],[377,19,487,17],[378,0,487,19,"name"],[378,12,487,19,"name"],[378,16,487,23],[378,18,487,25,"routeName"],[378,27,487,17],[379,0,487,46,"params"],[379,12,487,46,"params"],[379,18,487,52],[379,20,487,46,"params"],[380,0,487,17],[380,11,487,16],[381,0,486,13],[381,9,486,6],[382,0,489,5],[383,0,490,3],[383,5,479,2],[383,11,490,9],[384,0,491,4],[384,10,491,8,"initialRoute"],[384,22,491,4],[384,24,491,22],[385,0,492,6],[385,15,492,13],[386,0,493,8,"index"],[386,10,493,8,"index"],[386,15,493,13],[386,17,493,15],[386,18,492,13],[387,0,494,8,"routes"],[387,10,494,8,"routes"],[387,16,494,14],[387,18,494,16],[387,19,495,10],[388,0,495,12,"name"],[388,12,495,12,"name"],[388,16,495,16],[388,18,495,18,"initialRoute"],[389,0,495,10],[389,11,494,16],[389,13,496,10],[390,0,496,12,"name"],[390,12,496,12,"name"],[390,16,496,16],[390,18,496,18,"routeName"],[390,27,496,10],[391,0,496,39,"params"],[391,12,496,39,"params"],[391,18,496,45],[391,20,496,39,"params"],[391,26,496,10],[392,0,496,47,"state"],[392,12,496,47,"state"],[392,17,496,52],[392,19,496,54],[393,0,496,56,"routes"],[393,14,496,56,"routes"],[393,20,496,62],[393,22,496,64],[394,0,496,54],[395,0,496,10],[395,11,494,16],[396,0,492,13],[396,9,492,6],[397,0,499,5],[397,7,491,4],[397,13,499,11],[398,0,500,6],[398,15,500,13],[399,0,501,8,"routes"],[399,10,501,8,"routes"],[399,16,501,14],[399,18,501,16],[399,19,501,17],[400,0,501,19,"name"],[400,12,501,19,"name"],[400,16,501,23],[400,18,501,25,"routeName"],[400,27,501,17],[401,0,501,46,"params"],[401,12,501,46,"params"],[401,18,501,52],[401,20,501,46,"params"],[401,26,501,17],[402,0,501,54,"state"],[402,12,501,54,"state"],[402,17,501,59],[402,19,501,61],[403,0,501,63,"routes"],[403,14,501,63,"routes"],[403,20,501,69],[403,22,501,71],[404,0,501,61],[405,0,501,17],[405,11,501,16],[406,0,500,13],[406,9,500,6],[407,0,503,5],[408,0,504,3],[409,0,505,1],[409,3,473,0],[411,0,507,0],[411,6,507,6,"createNestedStateObject"],[411,29,507,29],[411,32,507,32],[411,41,507,6,"createNestedStateObject"],[411,64,507,32],[411,65,508,2,"routes"],[411,71,507,32],[411,73,509,2,"initialRoutes"],[411,86,507,32],[411,88,510,5],[412,0,511,2],[412,8,511,6,"state"],[412,13,511,2],[413,0,512,2],[413,8,512,6,"route"],[413,13,512,11],[413,16,512,14,"routes"],[413,22,512,20],[413,23,512,21,"shift"],[413,28,512,14],[413,30,512,2],[414,0,513,2],[414,8,513,6,"initialRoute"],[414,20,513,18],[414,23,513,21,"findInitialRoute"],[414,39,513,37],[414,40,513,38,"route"],[414,45,513,43],[414,46,513,44,"name"],[414,50,513,37],[414,52,513,50,"initialRoutes"],[414,65,513,37],[414,66,513,2],[415,0,515,2,"state"],[415,4,515,2,"state"],[415,9,515,7],[415,12,515,10,"createStateObject"],[415,29,515,27],[415,30,516,4,"initialRoute"],[415,42,515,27],[415,44,517,4,"route"],[415,49,517,9],[415,50,517,10,"name"],[415,54,515,27],[415,56,518,4,"route"],[415,61,518,9],[415,62,518,10,"params"],[415,68,515,27],[415,70,519,4,"routes"],[415,76,519,10],[415,77,519,11,"length"],[415,83,519,4],[415,88,519,22],[415,89,515,27],[415,90,515,2],[417,0,522,2],[417,8,522,6,"routes"],[417,14,522,12],[417,15,522,13,"length"],[417,21,522,6],[417,24,522,22],[417,25,522,2],[417,27,522,25],[418,0,523,4],[418,10,523,8,"nestedState"],[418,21,523,19],[418,24,523,22,"state"],[418,29,523,4],[420,0,525,4],[420,13,525,12,"route"],[420,18,525,17],[420,21,525,20,"routes"],[420,27,525,26],[420,28,525,27,"shift"],[420,33,525,20],[420,35,525,4],[420,37,525,74],[421,0,526,6,"initialRoute"],[421,8,526,6,"initialRoute"],[421,20,526,18],[421,23,526,21,"findInitialRoute"],[421,39,526,37],[421,40,526,38,"route"],[421,45,526,43],[421,46,526,44,"name"],[421,50,526,37],[421,52,526,50,"initialRoutes"],[421,65,526,37],[421,66,526,6],[422,0,528,6],[422,12,528,12,"nestedStateIndex"],[422,28,528,28],[422,31,529,8,"nestedState"],[422,42,529,19],[422,43,529,20,"index"],[422,48,529,8],[422,52,529,29,"nestedState"],[422,63,529,40],[422,64,529,41,"routes"],[422,70,529,29],[422,71,529,48,"length"],[422,77,529,29],[422,80,529,57],[422,81,528,6],[423,0,531,6,"nestedState"],[423,8,531,6,"nestedState"],[423,19,531,17],[423,20,531,18,"routes"],[423,26,531,6],[423,27,531,25,"nestedStateIndex"],[423,43,531,6],[423,45,531,43,"state"],[423,50,531,6],[423,53,531,51,"createStateObject"],[423,70,531,68],[423,71,532,8,"initialRoute"],[423,83,531,68],[423,85,533,8,"route"],[423,90,533,13],[423,91,533,14,"name"],[423,95,531,68],[423,97,534,8,"route"],[423,102,534,13],[423,103,534,14,"params"],[423,109,531,68],[423,111,535,8,"routes"],[423,117,535,14],[423,118,535,15,"length"],[423,124,535,8],[423,129,535,26],[423,130,531,68],[423,131,531,6],[425,0,538,6],[425,12,538,10,"routes"],[425,18,538,16],[425,19,538,17,"length"],[425,25,538,10],[425,28,538,26],[425,29,538,6],[425,31,538,29],[426,0,539,8,"nestedState"],[426,10,539,8,"nestedState"],[426,21,539,19],[426,24,539,22,"nestedState"],[426,35,539,33],[426,36,539,34,"routes"],[426,42,539,22],[426,43,539,41,"nestedStateIndex"],[426,59,539,22],[426,61,540,11,"state"],[426,66,539,8],[427,0,541,7],[428,0,542,5],[429,0,543,3],[431,0,545,2],[431,11,545,9,"state"],[431,16,545,2],[432,0,546,1],[432,3,507,0],[434,0,548,0],[434,6,548,6,"createRouteObjects"],[434,24,548,24],[434,27,548,27],[434,36,548,6,"createRouteObjects"],[434,54,548,27],[434,55,549,2,"configs"],[434,62,548,27],[434,64,550,2,"routeNames"],[434,74,548,27],[434,76,551,2,"allParams"],[434,85,548,27],[435,0,548,27],[435,11,553,2,"routeNames"],[435,21,553,12],[435,22,553,13,"map"],[435,25,553,2],[435,26,553,17],[435,36,553,18,"name"],[435,40,553,17],[435,42,553,27],[436,0,554,4],[436,10,554,10,"config"],[436,16,554,16],[436,19,554,19,"configs"],[436,26,554,26],[436,27,554,27,"find"],[436,31,554,19],[436,32,554,32],[436,42,554,33,"c"],[436,43,554,32],[437,0,554,32],[437,15,554,39,"c"],[437,16,554,40],[437,17,554,41,"screen"],[437,23,554,39],[437,28,554,52,"name"],[437,32,554,32],[438,0,554,32],[438,7,554,19],[438,8,554,4],[439,0,556,4],[439,10,556,8,"params"],[439,16,556,4],[441,0,558,4],[441,10,558,8,"allParams"],[441,19,558,17],[441,24,558,21,"config"],[441,30,558,17],[441,50,558,21,"config"],[441,56,558,27],[441,57,558,29,"path"],[441,61,558,17],[441,62,558,4],[441,64,558,35],[442,0,559,6],[442,12,559,12,"pattern"],[442,19,559,19],[442,22,559,22,"config"],[442,28,559,28],[442,29,559,29,"path"],[442,33,559,6],[444,0,561,6],[444,12,561,10,"pattern"],[444,19,561,6],[444,21,561,19],[445,0,562,8],[445,14,562,14,"paramPatterns"],[445,27,562,27],[445,30,562,30,"pattern"],[445,37,562,37],[445,38,563,11,"split"],[445,43,562,30],[445,44,563,17],[445,47,562,30],[445,49,564,11,"filter"],[445,55,562,30],[445,56,564,18],[445,66,564,19,"p"],[445,67,564,18],[446,0,564,18],[446,19,564,25,"p"],[446,20,564,26],[446,21,564,27,"startsWith"],[446,31,564,25],[446,32,564,38],[446,35,564,25],[446,36,564,18],[447,0,564,18],[447,11,562,30],[447,12,562,8],[449,0,566,8],[449,14,566,12,"paramPatterns"],[449,27,566,25],[449,28,566,26,"length"],[449,34,566,8],[449,36,566,34],[450,0,567,10,"params"],[450,12,567,10,"params"],[450,18,567,16],[450,21,567,19,"paramPatterns"],[450,34,567,32],[450,35,567,33,"reduce"],[450,41,567,19],[450,42,567,61],[450,52,567,62,"acc"],[450,55,567,61],[450,57,567,67,"p"],[450,58,567,61],[450,60,567,73],[451,0,568,12],[451,18,568,18,"key"],[451,21,568,21],[451,24,568,24,"p"],[451,25,568,25],[451,26,568,26,"replace"],[451,33,568,24],[451,34,568,34],[451,38,568,24],[451,40,568,40],[451,42,568,24],[451,44,568,44,"replace"],[451,51,568,24],[451,52,568,52],[451,57,568,24],[451,59,568,59],[451,61,568,24],[451,62,568,12],[452,0,569,12],[452,18,569,18,"value"],[452,23,569,23],[452,26,569,26,"allParams"],[452,35,569,35],[452,36,569,37,"p"],[452,37,569,35],[452,38,569,12],[454,0,571,12],[454,18,571,16,"value"],[454,23,571,12],[454,25,571,23],[455,0,572,14,"acc"],[455,16,572,14,"acc"],[455,19,572,17],[455,20,572,18,"key"],[455,23,572,17],[455,24,572,14],[455,27,573,16,"config"],[455,33,573,22],[455,34,573,23,"parse"],[455,39,573,16],[455,43,573,32,"config"],[455,49,573,38],[455,50,573,39,"parse"],[455,55,573,32],[455,56,573,45,"key"],[455,59,573,32],[455,60,573,16],[455,63,574,20,"config"],[455,69,574,26],[455,70,574,27,"parse"],[455,75,574,20],[455,76,574,33,"key"],[455,79,574,20],[455,81,574,38,"value"],[455,86,574,20],[455,87,573,16],[455,90,575,20,"value"],[455,95,572,14],[456,0,576,13],[458,0,578,12],[458,21,578,19,"acc"],[458,24,578,12],[459,0,579,11],[459,13,567,19],[459,15,579,13],[459,17,567,19],[459,18,567,10],[460,0,580,9],[461,0,581,7],[462,0,582,5],[464,0,584,4],[464,10,584,8,"params"],[464,16,584,14],[464,20,584,18,"Object"],[464,26,584,24],[464,27,584,25,"keys"],[464,31,584,18],[464,32,584,30,"params"],[464,38,584,18],[464,40,584,38,"length"],[464,46,584,4],[464,48,584,46],[465,0,585,6],[465,15,585,13],[466,0,585,15,"name"],[466,10,585,15,"name"],[466,14,585,19],[466,16,585,15,"name"],[466,20,585,13],[467,0,585,21,"params"],[467,10,585,21,"params"],[467,16,585,27],[467,18,585,21,"params"],[468,0,585,13],[468,9,585,6],[469,0,586,5],[471,0,588,4],[471,13,588,11],[472,0,588,13,"name"],[472,8,588,13,"name"],[472,12,588,17],[472,14,588,13,"name"],[473,0,588,11],[473,7,588,4],[474,0,589,3],[474,5,553,2],[474,6,548,27],[475,0,548,27],[475,3,548,0],[477,0,591,0],[477,6,591,6,"findFocusedRoute"],[477,22,591,22],[477,25,591,25],[477,34,591,6,"findFocusedRoute"],[477,50,591,25],[477,51,591,26,"state"],[477,56,591,25],[477,58,591,50],[478,0,591,50],[480,0,592,2],[480,8,592,6,"current"],[480,15,592,39],[480,18,592,42,"state"],[480,23,592,2],[482,0,594,2],[482,24,594,9,"current"],[482,31,594,2],[482,52,594,9],[482,62,594,18,"routes"],[482,68,594,9],[482,69,594,25,"current"],[482,76,594,32],[482,77,594,33,"index"],[482,82,594,25],[482,86,594,42],[482,87,594,9],[482,89,594,45,"state"],[482,94,594,2],[482,96,594,52],[483,0,594,52],[485,0,596,4,"current"],[485,6,596,4,"current"],[485,13,596,11],[485,16,596,14,"current"],[485,23,596,21],[485,24,596,22,"routes"],[485,30,596,14],[485,31,596,29,"current"],[485,38,596,36],[485,39,596,37,"index"],[485,44,596,29],[485,48,596,46],[485,49,596,14],[485,51,596,49,"state"],[485,56,596,4],[486,0,597,3],[488,0,599,2],[488,8,599,8,"route"],[488,13,599,13],[488,16,599,17,"current"],[488,23,599,16],[488,24,599,59,"routes"],[488,30,599,16],[488,31,600,4],[488,45,600,4,"current"],[488,52,600,11],[488,61,600,4],[488,83,600,13,"index"],[488,88,600,4],[488,93,600,22],[488,94,599,16],[488,95,599,2],[489,0,603,2],[489,11,603,9,"route"],[489,16,603,2],[490,0,604,1],[490,3,591,0],[492,0,606,0],[492,6,606,6,"parseQueryParams"],[492,22,606,22],[492,25,606,25],[492,34,606,6,"parseQueryParams"],[492,50,606,25],[492,51,607,2,"path"],[492,55,606,25],[492,57,608,2,"parseConfig"],[492,68,606,25],[492,70,609,5],[493,0,610,2],[493,8,610,8,"query"],[493,13,610,13],[493,16,610,16,"path"],[493,20,610,20],[493,21,610,21,"split"],[493,26,610,16],[493,27,610,27],[493,30,610,16],[493,32,610,32],[493,33,610,16],[493,34,610,2],[495,0,611,2],[495,8,611,8,"params"],[495,14,611,14],[495,17,611,17,"queryString"],[495,38,611,29,"parse"],[495,43,611,17],[495,44,611,35,"query"],[495,49,611,17],[495,50,611,2],[497,0,613,2],[497,8,613,6,"parseConfig"],[497,19,613,2],[497,21,613,19],[498,0,614,4,"Object"],[498,6,614,4,"Object"],[498,12,614,10],[498,13,614,11,"keys"],[498,17,614,4],[498,18,614,16,"params"],[498,24,614,4],[498,26,614,24,"forEach"],[498,33,614,4],[498,34,614,32],[498,44,614,33,"name"],[498,48,614,32],[498,50,614,42],[499,0,615,6],[499,12,615,10,"parseConfig"],[499,23,615,21],[499,24,615,22,"name"],[499,28,615,21],[499,29,615,10],[499,33,615,31],[499,40,615,38,"params"],[499,46,615,44],[499,47,615,45,"name"],[499,51,615,44],[499,52,615,31],[499,57,615,55],[499,65,615,6],[499,67,615,65],[500,0,616,8,"params"],[500,10,616,8,"params"],[500,16,616,14],[500,17,616,15,"name"],[500,21,616,14],[500,22,616,8],[500,25,616,23,"parseConfig"],[500,36,616,34],[500,37,616,35,"name"],[500,41,616,34],[500,42,616,23],[500,43,616,41,"params"],[500,49,616,47],[500,50,616,48,"name"],[500,54,616,47],[500,55,616,23],[500,56,616,8],[501,0,617,7],[502,0,618,5],[502,7,614,4],[503,0,619,3],[505,0,621,2],[505,11,621,9,"Object"],[505,17,621,15],[505,18,621,16,"keys"],[505,22,621,9],[505,23,621,21,"params"],[505,29,621,9],[505,31,621,29,"length"],[505,37,621,9],[505,40,621,38,"params"],[505,46,621,9],[505,49,621,47,"undefined"],[505,58,621,2],[506,0,622,1],[506,3,606,0]],"functionMap":{"names":["<global>","getStateFromPath","remaining.split.filter.map$argument_0","Object.keys.map$argument_0","concat.sort$argument_0","configs.find$argument_0","config.routeNames.every$argument_0","match.routeNames.map$argument_0","configs.map$argument_0","joinPaths","paths.map$argument_0","matchAgainstConfigs","config.pattern.split.filter$argument_0","paramPatterns.reduce$argument_0","createNormalizedConfigs","Object.keys.forEach$argument_0","createConfigItem","pattern.split.map$argument_0","findParseConfigForRoute","findInitialRoute","createStateObject","createNestedStateObject","createRouteObjects","routeNames.map$argument_0","pattern.split.filter$argument_0","findFocusedRoute","parseQueryParams"],"mappings":"AAA;eCwD;WC8B;ODQ;kCEY;SFO;UGG;KHuC;MIM;UCI,wBD,wBC,OD;SJC;6BMK;SNM;kBOgB;QPI;CDqE;kBSE;yBCE,mBD;cTE;4BWE;gBCmB,wBD;8DEG;SFM;CXU;gCcE;0CCiE;ODW;CdO;yBgBE;eCe;WDY;ChBc;gCkBE;ClBW;yBmBG;CnBY;0BoBI;CpBgC;gCqBE;CrBuC;2BsBE;iBCK;gClBC,wBkB;kBCU,wBD;6DVG;WUY;GDU,CtB;yByBE;CzBa;yB0BE;gCXQ;KWI;C1BI"}},"type":"js/module"}]}