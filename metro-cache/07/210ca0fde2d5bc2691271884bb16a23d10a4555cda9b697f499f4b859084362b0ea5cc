{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"nanoid/non-secure","data":{"isAsync":false}},{"name":"./BaseRouter","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = TabRouter;\n  exports.TabActions = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _nonSecure = _$$_REQUIRE(_dependencyMap[2], \"nanoid/non-secure\");\n\n  var _BaseRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./BaseRouter\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var TYPE_ROUTE = 'route';\n  var TabActions = {\n    jumpTo: function jumpTo(name, params) {\n      return {\n        type: 'JUMP_TO',\n        payload: {\n          name: name,\n          params: params\n        }\n      };\n    }\n  };\n  exports.TabActions = TabActions;\n\n  var getRouteHistory = function getRouteHistory(routes, index, backBehavior, initialRouteName) {\n    var history = [{\n      type: TYPE_ROUTE,\n      key: routes[index].key\n    }];\n    var initialRouteIndex;\n\n    switch (backBehavior) {\n      case 'order':\n        for (var i = index; i > 0; i--) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[i - 1].key\n          });\n        }\n\n        break;\n\n      case 'initialRoute':\n        initialRouteIndex = routes.findIndex(function (route) {\n          return route.name === initialRouteName;\n        });\n        initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n\n        if (initialRouteIndex !== index) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[initialRouteIndex].key\n          });\n        }\n\n        break;\n\n      case 'history':\n        break;\n    }\n\n    return history;\n  };\n\n  var changeIndex = function changeIndex(state, index, backBehavior, initialRouteName) {\n    var history;\n\n    if (backBehavior === 'history') {\n      var currentKey = state.routes[index].key;\n      history = state.history.filter(function (it) {\n        return it.type === 'route' ? it.key !== currentKey : false;\n      }).concat({\n        type: TYPE_ROUTE,\n        key: currentKey\n      });\n    } else {\n      history = getRouteHistory(state.routes, index, backBehavior, initialRouteName);\n    }\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      index: index,\n      history: history\n    });\n  };\n\n  function TabRouter(_ref) {\n    var initialRouteName = _ref.initialRouteName,\n        _ref$backBehavior = _ref.backBehavior,\n        backBehavior = _ref$backBehavior === void 0 ? 'history' : _ref$backBehavior;\n\n    var router = _objectSpread(_objectSpread({}, _BaseRouter.default), {}, {\n      type: 'tab',\n      getInitialState: function getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n            routeParamList = _ref2.routeParamList;\n        var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n        var routes = routeNames.map(function (name) {\n          return {\n            name: name,\n            key: name + \"-\" + (0, _nonSecure.nanoid)(),\n            params: routeParamList[name]\n          };\n        });\n        var history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        return {\n          stale: false,\n          type: 'tab',\n          key: \"tab-\" + (0, _nonSecure.nanoid)(),\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        };\n      },\n      getRehydratedState: function getRehydratedState(partialState, _ref3) {\n        var _state$history, _history;\n\n        var routeNames = _ref3.routeNames,\n            routeParamList = _ref3.routeParamList;\n        var state = partialState;\n\n        if (state.stale === false) {\n          return state;\n        }\n\n        var routes = routeNames.map(function (name) {\n          var route = state.routes.find(function (r) {\n            return r.name === name;\n          });\n          return _objectSpread(_objectSpread({}, route), {}, {\n            name: name,\n            key: route && route.name === name && route.key ? route.key : name + \"-\" + (0, _nonSecure.nanoid)(),\n            params: routeParamList[name] !== undefined ? _objectSpread(_objectSpread({}, routeParamList[name]), route ? route.params : undefined) : route ? route.params : undefined\n          });\n        });\n        var index = Math.min(Math.max(typeof state.index === 'number' ? state.index : routeNames.indexOf(state.routes[0].name), 0), routes.length - 1);\n        var history = (_state$history = state.history) == null ? void 0 : _state$history.filter(function (it) {\n          return routes.find(function (r) {\n            return r.key === it.key;\n          });\n        });\n\n        if (!((_history = history) == null ? void 0 : _history.length)) {\n          history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        }\n\n        return {\n          stale: false,\n          type: 'tab',\n          key: \"tab-\" + (0, _nonSecure.nanoid)(),\n          index: index,\n          routeNames: routeNames,\n          history: history,\n          routes: routes\n        };\n      },\n      getStateForRouteNamesChange: function getStateForRouteNamesChange(state, _ref4) {\n        var routeNames = _ref4.routeNames,\n            routeParamList = _ref4.routeParamList;\n        var routes = routeNames.map(function (name) {\n          return state.routes.find(function (r) {\n            return r.name === name;\n          }) || {\n            name: name,\n            key: name + \"-\" + (0, _nonSecure.nanoid)(),\n            params: routeParamList[name]\n          };\n        });\n        var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n        var history = state.history.filter(function (it) {\n          return routes.find(function (r) {\n            return r.key === it.key;\n          });\n        });\n\n        if (!history.length) {\n          history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          history: history,\n          routeNames: routeNames,\n          routes: routes,\n          index: index\n        });\n      },\n      getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(function (r) {\n          return r.key === key;\n        });\n\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n\n        return changeIndex(state, index, backBehavior, initialRouteName);\n      },\n      getStateForAction: function getStateForAction(state, action) {\n        switch (action.type) {\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n            {\n              var index = -1;\n\n              if (action.type === 'NAVIGATE' && action.payload.key) {\n                index = state.routes.findIndex(function (route) {\n                  return route.key === action.payload.key;\n                });\n              } else {\n                index = state.routes.findIndex(function (route) {\n                  return route.name === action.payload.name;\n                });\n              }\n\n              if (index === -1) {\n                return null;\n              }\n\n              return changeIndex(_objectSpread(_objectSpread({}, state), {}, {\n                routes: action.payload.params !== undefined ? state.routes.map(function (route, i) {\n                  return i === index ? _objectSpread(_objectSpread({}, route), {}, {\n                    params: _objectSpread(_objectSpread({}, route.params), action.payload.params)\n                  }) : route;\n                }) : state.routes\n              }), index, backBehavior, initialRouteName);\n            }\n\n          case 'GO_BACK':\n            {\n              if (state.history.length === 1) {\n                return null;\n              }\n\n              var previousKey = state.history[state.history.length - 2].key;\n\n              var _index = state.routes.findIndex(function (route) {\n                return route.key === previousKey;\n              });\n\n              if (_index === -1) {\n                return null;\n              }\n\n              return _objectSpread(_objectSpread({}, state), {}, {\n                history: state.history.slice(0, -1),\n                index: _index\n              });\n            }\n\n          default:\n            return _BaseRouter.default.getStateForAction(state, action);\n        }\n      },\n      shouldActionChangeFocus: function shouldActionChangeFocus(action) {\n        return action.type === 'NAVIGATE';\n      },\n      actionCreators: TabActions\n    });\n\n    return router;\n  }\n});","lineCount":271,"map":[[12,0,1,0],[14,0,2,0],[20,0,51,0],[20,6,51,6,"TYPE_ROUTE"],[20,16,51,16],[20,19,51,19],[20,26,51,0],[21,0,53,7],[21,6,53,13,"TabActions"],[21,16,53,23],[21,19,53,26],[22,0,54,2,"jumpTo"],[22,4,54,2,"jumpTo"],[22,10,53,26],[22,28,54,9,"name"],[22,32,53,26],[22,34,54,23,"params"],[22,40,53,26],[22,42,54,55],[23,0,55,4],[23,13,55,11],[24,0,55,13,"type"],[24,8,55,13,"type"],[24,12,55,17],[24,14,55,19],[24,23,55,11],[25,0,55,30,"payload"],[25,8,55,30,"payload"],[25,15,55,37],[25,17,55,39],[26,0,55,41,"name"],[26,10,55,41,"name"],[26,14,55,45],[26,16,55,41,"name"],[26,20,55,39],[27,0,55,47,"params"],[27,10,55,47,"params"],[27,16,55,53],[27,18,55,47,"params"],[28,0,55,39],[29,0,55,11],[29,7,55,4],[30,0,56,3],[31,0,53,26],[31,3,53,7],[34,0,59,0],[34,6,59,6,"getRouteHistory"],[34,21,59,21],[34,24,59,24],[34,33,59,6,"getRouteHistory"],[34,48,59,24],[34,49,60,2,"routes"],[34,55,59,24],[34,57,61,2,"index"],[34,62,59,24],[34,64,62,2,"backBehavior"],[34,76,59,24],[34,78,63,2,"initialRouteName"],[34,94,59,24],[34,96,64,5],[35,0,65,2],[35,8,65,8,"history"],[35,15,65,15],[35,18,65,18],[35,19,65,19],[36,0,65,21,"type"],[36,6,65,21,"type"],[36,10,65,25],[36,12,65,27,"TYPE_ROUTE"],[36,22,65,19],[37,0,65,39,"key"],[37,6,65,39,"key"],[37,9,65,42],[37,11,65,44,"routes"],[37,17,65,50],[37,18,65,51,"index"],[37,23,65,50],[37,24,65,44],[37,25,65,58,"key"],[38,0,65,19],[38,5,65,18],[38,6,65,2],[39,0,66,2],[39,8,66,6,"initialRouteIndex"],[39,25,66,2],[41,0,68,2],[41,12,68,10,"backBehavior"],[41,24,68,2],[42,0,69,4],[42,11,69,9],[42,18,69,4],[43,0,70,6],[43,13,70,11],[43,17,70,15,"i"],[43,18,70,16],[43,21,70,19,"index"],[43,26,70,6],[43,28,70,26,"i"],[43,29,70,27],[43,32,70,30],[43,33,70,6],[43,35,70,33,"i"],[43,36,70,34],[43,38,70,6],[43,40,70,38],[44,0,71,8,"history"],[44,10,71,8,"history"],[44,17,71,15],[44,18,71,16,"unshift"],[44,25,71,8],[44,26,71,24],[45,0,71,26,"type"],[45,12,71,26,"type"],[45,16,71,30],[45,18,71,32,"TYPE_ROUTE"],[45,28,71,24],[46,0,71,44,"key"],[46,12,71,44,"key"],[46,15,71,47],[46,17,71,49,"routes"],[46,23,71,55],[46,24,71,56,"i"],[46,25,71,57],[46,28,71,60],[46,29,71,55],[46,30,71,49],[46,31,71,63,"key"],[47,0,71,24],[47,11,71,8],[48,0,72,7],[50,0,73,6],[52,0,74,4],[52,11,74,9],[52,25,74,4],[53,0,75,6,"initialRouteIndex"],[53,8,75,6,"initialRouteIndex"],[53,25,75,23],[53,28,75,26,"routes"],[53,34,75,32],[53,35,75,33,"findIndex"],[53,44,75,26],[53,45,76,8],[53,55,76,9,"route"],[53,60,76,8],[54,0,76,8],[54,17,76,19,"route"],[54,22,76,24],[54,23,76,25,"name"],[54,27,76,19],[54,32,76,34,"initialRouteName"],[54,48,76,8],[55,0,76,8],[55,9,75,26],[55,10,75,6],[56,0,78,6,"initialRouteIndex"],[56,8,78,6,"initialRouteIndex"],[56,25,78,23],[56,28,78,26,"initialRouteIndex"],[56,45,78,43],[56,50,78,48],[56,51,78,49],[56,52,78,26],[56,55,78,53],[56,56,78,26],[56,59,78,57,"initialRouteIndex"],[56,76,78,6],[58,0,80,6],[58,12,80,10,"initialRouteIndex"],[58,29,80,27],[58,34,80,32,"index"],[58,39,80,6],[58,41,80,39],[59,0,81,8,"history"],[59,10,81,8,"history"],[59,17,81,15],[59,18,81,16,"unshift"],[59,25,81,8],[59,26,81,24],[60,0,82,10,"type"],[60,12,82,10,"type"],[60,16,82,14],[60,18,82,16,"TYPE_ROUTE"],[60,28,81,24],[61,0,83,10,"key"],[61,12,83,10,"key"],[61,15,83,13],[61,17,83,15,"routes"],[61,23,83,21],[61,24,83,22,"initialRouteIndex"],[61,41,83,21],[61,42,83,15],[61,43,83,41,"key"],[62,0,81,24],[62,11,81,8],[63,0,85,7],[65,0,86,6],[67,0,87,4],[67,11,87,9],[67,20,87,4],[68,0,89,6],[69,0,68,2],[71,0,92,2],[71,11,92,9,"history"],[71,18,92,2],[72,0,93,1],[72,3,59,0],[74,0,95,0],[74,6,95,6,"changeIndex"],[74,17,95,17],[74,20,95,20],[74,29,95,6,"changeIndex"],[74,40,95,20],[74,41,96,2,"state"],[74,46,95,20],[74,48,97,2,"index"],[74,53,95,20],[74,55,98,2,"backBehavior"],[74,67,95,20],[74,69,99,2,"initialRouteName"],[74,85,95,20],[74,87,100,5],[75,0,101,2],[75,8,101,6,"history"],[75,15,101,2],[77,0,103,2],[77,8,103,6,"backBehavior"],[77,20,103,18],[77,25,103,23],[77,34,103,2],[77,36,103,34],[78,0,104,4],[78,10,104,10,"currentKey"],[78,20,104,20],[78,23,104,23,"state"],[78,28,104,28],[78,29,104,29,"routes"],[78,35,104,23],[78,36,104,36,"index"],[78,41,104,23],[78,43,104,43,"key"],[78,46,104,4],[79,0,106,4,"history"],[79,6,106,4,"history"],[79,13,106,11],[79,16,106,14,"state"],[79,21,106,19],[79,22,106,20,"history"],[79,29,106,14],[79,30,107,7,"filter"],[79,36,106,14],[79,37,107,14],[79,47,107,15,"it"],[79,49,107,14],[80,0,107,14],[80,15,107,23,"it"],[80,17,107,25],[80,18,107,26,"type"],[80,22,107,23],[80,27,107,35],[80,34,107,23],[80,37,107,45,"it"],[80,39,107,47],[80,40,107,48,"key"],[80,43,107,45],[80,48,107,56,"currentKey"],[80,58,107,23],[80,61,107,69],[80,66,107,14],[81,0,107,14],[81,7,106,14],[81,9,108,7,"concat"],[81,15,106,14],[81,16,108,14],[82,0,108,16,"type"],[82,8,108,16,"type"],[82,12,108,20],[82,14,108,22,"TYPE_ROUTE"],[82,24,108,14],[83,0,108,34,"key"],[83,8,108,34,"key"],[83,11,108,37],[83,13,108,39,"currentKey"],[84,0,108,14],[84,7,106,14],[84,8,106,4],[85,0,109,3],[85,5,103,2],[85,11,109,9],[86,0,110,4,"history"],[86,6,110,4,"history"],[86,13,110,11],[86,16,110,14,"getRouteHistory"],[86,31,110,29],[86,32,111,6,"state"],[86,37,111,11],[86,38,111,12,"routes"],[86,44,110,29],[86,46,112,6,"index"],[86,51,110,29],[86,53,113,6,"backBehavior"],[86,65,110,29],[86,67,114,6,"initialRouteName"],[86,83,110,29],[86,84,110,4],[87,0,116,3],[89,0,118,2],[89,43,119,7,"state"],[89,48,118,2],[90,0,120,4,"index"],[90,6,120,4,"index"],[90,11,120,9],[90,13,120,4,"index"],[90,18,118,2],[91,0,121,4,"history"],[91,6,121,4,"history"],[91,13,121,11],[91,15,121,4,"history"],[92,0,118,2],[93,0,123,1],[93,3,95,0],[95,0,125,15],[95,11,125,24,"TabRouter"],[95,20,125,15],[95,27,128,21],[96,0,128,21],[96,8,126,2,"initialRouteName"],[96,24,128,21],[96,32,126,2,"initialRouteName"],[96,48,128,21],[97,0,128,21],[97,33,127,2,"backBehavior"],[97,45,128,21],[98,0,128,21],[98,8,127,2,"backBehavior"],[98,20,128,21],[98,54,127,17],[98,63,128,21],[100,0,129,2],[100,8,129,8,"router"],[100,14,132,3],[100,49,133,7,"BaseRouter"],[100,68,132,3],[101,0,135,4,"type"],[101,6,135,4,"type"],[101,10,135,8],[101,12,135,10],[101,17,132,3],[102,0,137,4,"getInitialState"],[102,6,137,4,"getInitialState"],[102,21,132,3],[102,55,137,52],[103,0,137,52],[103,12,137,22,"routeNames"],[103,22,137,52],[103,31,137,22,"routeNames"],[103,41,137,52],[104,0,137,52],[104,12,137,34,"routeParamList"],[104,26,137,52],[104,35,137,34,"routeParamList"],[104,49,137,52],[105,0,138,6],[105,12,138,12,"index"],[105,17,138,17],[105,20,139,8,"initialRouteName"],[105,36,139,24],[105,41,139,29,"undefined"],[105,50,139,8],[105,54,139,42,"routeNames"],[105,64,139,52],[105,65,139,53,"includes"],[105,73,139,42],[105,74,139,62,"initialRouteName"],[105,90,139,42],[105,91,139,8],[105,94,140,12,"routeNames"],[105,104,140,22],[105,105,140,23,"indexOf"],[105,112,140,12],[105,113,140,31,"initialRouteName"],[105,129,140,12],[105,130,139,8],[105,133,141,12],[105,134,138,6],[106,0,143,6],[106,12,143,12,"routes"],[106,18,143,18],[106,21,143,21,"routeNames"],[106,31,143,31],[106,32,143,32,"map"],[106,35,143,21],[106,36,143,36],[106,46,143,37,"name"],[106,50,143,36],[107,0,143,36],[107,17,143,47],[108,0,144,8,"name"],[108,12,144,8,"name"],[108,16,144,12],[108,18,144,8,"name"],[108,22,143,47],[109,0,145,8,"key"],[109,12,145,8,"key"],[109,15,145,11],[109,17,145,16,"name"],[109,21,145,11],[109,30,145,24],[109,54,143,47],[110,0,146,8,"params"],[110,12,146,8,"params"],[110,18,146,14],[110,20,146,16,"routeParamList"],[110,34,146,30],[110,35,146,31,"name"],[110,39,146,30],[111,0,143,47],[111,11,143,36],[112,0,143,36],[112,9,143,21],[112,10,143,6],[113,0,149,6],[113,12,149,12,"history"],[113,19,149,19],[113,22,149,22,"getRouteHistory"],[113,37,149,37],[113,38,150,8,"routes"],[113,44,149,37],[113,46,151,8,"index"],[113,51,149,37],[113,53,152,8,"backBehavior"],[113,65,149,37],[113,67,153,8,"initialRouteName"],[113,83,149,37],[113,84,149,6],[114,0,156,6],[114,15,156,13],[115,0,157,8,"stale"],[115,10,157,8,"stale"],[115,15,157,13],[115,17,157,15],[115,22,156,13],[116,0,158,8,"type"],[116,10,158,8,"type"],[116,14,158,12],[116,16,158,14],[116,21,156,13],[117,0,159,8,"key"],[117,10,159,8,"key"],[117,13,159,11],[117,24,159,20],[117,48,156,13],[118,0,160,8,"index"],[118,10,160,8,"index"],[118,15,160,13],[118,17,160,8,"index"],[118,22,156,13],[119,0,161,8,"routeNames"],[119,10,161,8,"routeNames"],[119,20,161,18],[119,22,161,8,"routeNames"],[119,32,156,13],[120,0,162,8,"history"],[120,10,162,8,"history"],[120,17,162,15],[120,19,162,8,"history"],[120,26,156,13],[121,0,163,8,"routes"],[121,10,163,8,"routes"],[121,16,163,14],[121,18,163,8,"routes"],[122,0,156,13],[122,9,156,6],[123,0,165,5],[123,7,132,3],[124,0,167,4,"getRehydratedState"],[124,6,167,4,"getRehydratedState"],[124,24,132,3],[124,54,167,23,"partialState"],[124,66,132,3],[124,75,167,69],[125,0,167,69],[127,0,167,69],[127,12,167,39,"routeNames"],[127,22,167,69],[127,31,167,39,"routeNames"],[127,41,167,69],[128,0,167,69],[128,12,167,51,"routeParamList"],[128,26,167,69],[128,35,167,51,"routeParamList"],[128,49,167,69],[129,0,168,6],[129,12,168,10,"state"],[129,17,168,15],[129,20,168,18,"partialState"],[129,32,168,6],[131,0,170,6],[131,12,170,10,"state"],[131,17,170,15],[131,18,170,16,"stale"],[131,23,170,10],[131,28,170,26],[131,33,170,6],[131,35,170,33],[132,0,171,8],[132,17,171,15,"state"],[132,22,171,8],[133,0,172,7],[135,0,174,6],[135,12,174,12,"routes"],[135,18,174,18],[135,21,174,21,"routeNames"],[135,31,174,31],[135,32,174,32,"map"],[135,35,174,21],[135,36,174,36],[135,46,174,37,"name"],[135,50,174,36],[135,52,174,46],[136,0,175,8],[136,14,175,14,"route"],[136,19,175,19],[136,22,175,23,"state"],[136,27,175,22],[136,28,175,66,"routes"],[136,34,175,22],[136,35,175,73,"find"],[136,39,175,22],[136,40,176,10],[136,50,176,11,"r"],[136,51,176,10],[137,0,176,10],[137,19,176,17,"r"],[137,20,176,18],[137,21,176,19,"name"],[137,25,176,17],[137,30,176,28,"name"],[137,34,176,10],[138,0,176,10],[138,11,175,22],[138,12,175,8],[139,0,179,8],[139,49,180,13,"route"],[139,54,179,8],[140,0,181,10,"name"],[140,12,181,10,"name"],[140,16,181,14],[140,18,181,10,"name"],[140,22,179,8],[141,0,182,10,"key"],[141,12,182,10,"key"],[141,15,182,13],[141,17,183,12,"route"],[141,22,183,17],[141,26,183,21,"route"],[141,31,183,26],[141,32,183,27,"name"],[141,36,183,21],[141,41,183,36,"name"],[141,45,183,12],[141,49,183,44,"route"],[141,54,183,49],[141,55,183,50,"key"],[141,58,183,12],[141,61,184,16,"route"],[141,66,184,21],[141,67,184,22,"key"],[141,70,183,12],[141,73,185,19,"name"],[141,77,183,12],[141,86,185,27],[141,110,179,8],[142,0,186,10,"params"],[142,12,186,10,"params"],[142,18,186,16],[142,20,187,12,"routeParamList"],[142,34,187,26],[142,35,187,27,"name"],[142,39,187,26],[142,40,187,12],[142,45,187,37,"undefined"],[142,54,187,12],[142,89,189,21,"routeParamList"],[142,103,189,35],[142,104,189,36,"name"],[142,108,189,35],[142,109,187,12],[142,112,190,22,"route"],[142,117,190,27],[142,120,190,30,"route"],[142,125,190,35],[142,126,190,36,"params"],[142,132,190,27],[142,135,190,45,"undefined"],[142,144,187,12],[142,148,192,16,"route"],[142,153,192,21],[142,156,193,16,"route"],[142,161,193,21],[142,162,193,22,"params"],[142,168,192,21],[142,171,194,16,"undefined"],[143,0,179,8],[144,0,196,7],[144,9,174,21],[144,10,174,6],[145,0,198,6],[145,12,198,12,"index"],[145,17,198,17],[145,20,198,20,"Math"],[145,24,198,24],[145,25,198,25,"min"],[145,28,198,20],[145,29,199,8,"Math"],[145,33,199,12],[145,34,199,13,"max"],[145,37,199,8],[145,38,200,10],[145,45,200,17,"state"],[145,50,200,22],[145,51,200,23,"index"],[145,56,200,10],[145,61,200,33],[145,69,200,10],[145,72,201,14,"state"],[145,77,201,19],[145,78,201,20,"index"],[145,83,200,10],[145,86,202,14,"routeNames"],[145,96,202,24],[145,97,202,25,"indexOf"],[145,104,202,14],[145,105,202,33,"state"],[145,110,202,38],[145,111,202,39,"routes"],[145,117,202,33],[145,118,202,46],[145,119,202,33],[145,121,202,49,"name"],[145,125,202,14],[145,126,199,8],[145,128,203,10],[145,129,199,8],[145,130,198,20],[145,132,205,8,"routes"],[145,138,205,14],[145,139,205,15,"length"],[145,145,205,8],[145,148,205,24],[145,149,198,20],[145,150,198,6],[146,0,208,6],[146,12,208,10,"history"],[146,19,208,17],[146,40,208,20,"state"],[146,45,208,25],[146,46,208,26,"history"],[146,53,208,17],[146,74,208,20],[146,89,208,35,"filter"],[146,95,208,20],[146,96,208,42],[146,106,208,43,"it"],[146,108,208,42],[147,0,208,42],[147,17,209,8,"routes"],[147,23,209,14],[147,24,209,15,"find"],[147,28,209,8],[147,29,209,20],[147,39,209,21,"r"],[147,40,209,20],[148,0,209,20],[148,19,209,27,"r"],[148,20,209,28],[148,21,209,29,"key"],[148,24,209,27],[148,29,209,37,"it"],[148,31,209,39],[148,32,209,40,"key"],[148,35,209,20],[149,0,209,20],[149,11,209,8],[149,12,208,42],[150,0,208,42],[150,9,208,20],[150,10,208,6],[152,0,212,6],[152,12,212,10],[152,26,212,11,"history"],[152,33,212,10],[152,54,212,11],[152,63,212,20,"length"],[152,69,212,10],[152,70,212,6],[152,72,212,28],[153,0,213,8,"history"],[153,10,213,8,"history"],[153,17,213,15],[153,20,213,18,"getRouteHistory"],[153,35,213,33],[153,36,214,10,"routes"],[153,42,213,33],[153,44,215,10,"index"],[153,49,213,33],[153,51,216,10,"backBehavior"],[153,63,213,33],[153,65,217,10,"initialRouteName"],[153,81,213,33],[153,82,213,8],[154,0,219,7],[156,0,221,6],[156,15,221,13],[157,0,222,8,"stale"],[157,10,222,8,"stale"],[157,15,222,13],[157,17,222,15],[157,22,221,13],[158,0,223,8,"type"],[158,10,223,8,"type"],[158,14,223,12],[158,16,223,14],[158,21,221,13],[159,0,224,8,"key"],[159,10,224,8,"key"],[159,13,224,11],[159,24,224,20],[159,48,221,13],[160,0,225,8,"index"],[160,10,225,8,"index"],[160,15,225,13],[160,17,225,8,"index"],[160,22,221,13],[161,0,226,8,"routeNames"],[161,10,226,8,"routeNames"],[161,20,226,18],[161,22,226,8,"routeNames"],[161,32,221,13],[162,0,227,8,"history"],[162,10,227,8,"history"],[162,17,227,15],[162,19,227,8,"history"],[162,26,221,13],[163,0,228,8,"routes"],[163,10,228,8,"routes"],[163,16,228,14],[163,18,228,8,"routes"],[164,0,221,13],[164,9,221,6],[165,0,230,5],[165,7,132,3],[166,0,232,4,"getStateForRouteNamesChange"],[166,6,232,4,"getStateForRouteNamesChange"],[166,33,132,3],[166,72,232,32,"state"],[166,77,132,3],[166,86,232,71],[167,0,232,71],[167,12,232,41,"routeNames"],[167,22,232,71],[167,31,232,41,"routeNames"],[167,41,232,71],[168,0,232,71],[168,12,232,53,"routeParamList"],[168,26,232,71],[168,35,232,53,"routeParamList"],[168,49,232,71],[169,0,233,6],[169,12,233,12,"routes"],[169,18,233,18],[169,21,233,21,"routeNames"],[169,31,233,31],[169,32,233,32,"map"],[169,35,233,21],[169,36,234,8],[169,46,234,9,"name"],[169,50,234,8],[170,0,234,8],[170,17,235,10,"state"],[170,22,235,15],[170,23,235,16,"routes"],[170,29,235,10],[170,30,235,23,"find"],[170,34,235,10],[170,35,235,28],[170,45,235,29,"r"],[170,46,235,28],[171,0,235,28],[171,19,235,35,"r"],[171,20,235,36],[171,21,235,37,"name"],[171,25,235,35],[171,30,235,46,"name"],[171,34,235,28],[172,0,235,28],[172,11,235,10],[172,16,235,55],[173,0,236,12,"name"],[173,12,236,12,"name"],[173,16,236,16],[173,18,236,12,"name"],[173,22,235,55],[174,0,237,12,"key"],[174,12,237,12,"key"],[174,15,237,15],[174,17,237,20,"name"],[174,21,237,15],[174,30,237,28],[174,54,235,55],[175,0,238,12,"params"],[175,12,238,12,"params"],[175,18,238,18],[175,20,238,20,"routeParamList"],[175,34,238,34],[175,35,238,35,"name"],[175,39,238,34],[176,0,235,55],[176,11,234,8],[177,0,234,8],[177,9,233,21],[177,10,233,6],[178,0,242,6],[178,12,242,12,"index"],[178,17,242,17],[178,20,242,20,"Math"],[178,24,242,24],[178,25,242,25,"max"],[178,28,242,20],[178,29,243,8],[178,30,242,20],[178,32,244,8,"routeNames"],[178,42,244,18],[178,43,244,19,"indexOf"],[178,50,244,8],[178,51,244,27,"state"],[178,56,244,32],[178,57,244,33,"routes"],[178,63,244,27],[178,64,244,40,"state"],[178,69,244,45],[178,70,244,46,"index"],[178,75,244,27],[178,77,244,53,"name"],[178,81,244,8],[178,82,242,20],[178,83,242,6],[179,0,247,6],[179,12,247,10,"history"],[179,19,247,17],[179,22,247,20,"state"],[179,27,247,25],[179,28,247,26,"history"],[179,35,247,20],[179,36,247,34,"filter"],[179,42,247,20],[179,43,247,41],[179,53,247,42,"it"],[179,55,247,41],[180,0,247,41],[180,17,248,8,"routes"],[180,23,248,14],[180,24,248,15,"find"],[180,28,248,8],[180,29,248,20],[180,39,248,21,"r"],[180,40,248,20],[181,0,248,20],[181,19,248,27,"r"],[181,20,248,28],[181,21,248,29,"key"],[181,24,248,27],[181,29,248,37,"it"],[181,31,248,39],[181,32,248,40,"key"],[181,35,248,20],[182,0,248,20],[182,11,248,8],[182,12,247,41],[183,0,247,41],[183,9,247,20],[183,10,247,6],[185,0,251,6],[185,12,251,10],[185,13,251,11,"history"],[185,20,251,18],[185,21,251,19,"length"],[185,27,251,6],[185,29,251,27],[186,0,252,8,"history"],[186,10,252,8,"history"],[186,17,252,15],[186,20,252,18,"getRouteHistory"],[186,35,252,33],[186,36,253,10,"routes"],[186,42,252,33],[186,44,254,10,"index"],[186,49,252,33],[186,51,255,10,"backBehavior"],[186,63,252,33],[186,65,256,10,"initialRouteName"],[186,81,252,33],[186,82,252,8],[187,0,258,7],[189,0,260,6],[189,47,261,11,"state"],[189,52,260,6],[190,0,262,8,"history"],[190,10,262,8,"history"],[190,17,262,15],[190,19,262,8,"history"],[190,26,260,6],[191,0,263,8,"routeNames"],[191,10,263,8,"routeNames"],[191,20,263,18],[191,22,263,8,"routeNames"],[191,32,260,6],[192,0,264,8,"routes"],[192,10,264,8,"routes"],[192,16,264,14],[192,18,264,8,"routes"],[192,24,260,6],[193,0,265,8,"index"],[193,10,265,8,"index"],[193,15,265,13],[193,17,265,8,"index"],[194,0,260,6],[195,0,267,5],[195,7,132,3],[196,0,269,4,"getStateForRouteFocus"],[196,6,269,4,"getStateForRouteFocus"],[196,27,132,3],[196,60,269,26,"state"],[196,65,132,3],[196,67,269,33,"key"],[196,70,132,3],[196,72,269,38],[197,0,270,6],[197,12,270,12,"index"],[197,17,270,17],[197,20,270,20,"state"],[197,25,270,25],[197,26,270,26,"routes"],[197,32,270,20],[197,33,270,33,"findIndex"],[197,42,270,20],[197,43,270,43],[197,53,270,44,"r"],[197,54,270,43],[198,0,270,43],[198,17,270,50,"r"],[198,18,270,51],[198,19,270,52,"key"],[198,22,270,50],[198,27,270,60,"key"],[198,30,270,43],[199,0,270,43],[199,9,270,20],[199,10,270,6],[201,0,272,6],[201,12,272,10,"index"],[201,17,272,15],[201,22,272,20],[201,23,272,21],[201,24,272,10],[201,28,272,26,"index"],[201,33,272,31],[201,38,272,36,"state"],[201,43,272,41],[201,44,272,42,"index"],[201,49,272,6],[201,51,272,49],[202,0,273,8],[202,17,273,15,"state"],[202,22,273,8],[203,0,274,7],[205,0,276,6],[205,15,276,13,"changeIndex"],[205,26,276,24],[205,27,276,25,"state"],[205,32,276,24],[205,34,276,32,"index"],[205,39,276,24],[205,41,276,39,"backBehavior"],[205,53,276,24],[205,55,276,53,"initialRouteName"],[205,71,276,24],[205,72,276,6],[206,0,277,5],[206,7,132,3],[207,0,279,4,"getStateForAction"],[207,6,279,4,"getStateForAction"],[207,23,132,3],[207,52,279,22,"state"],[207,57,132,3],[207,59,279,29,"action"],[207,65,132,3],[207,67,279,37],[208,0,280,6],[208,16,280,14,"action"],[208,22,280,20],[208,23,280,21,"type"],[208,27,280,6],[209,0,281,8],[209,15,281,13],[209,24,281,8],[210,0,282,8],[210,15,282,13],[210,25,282,8],[211,0,282,25],[212,0,283,10],[212,18,283,14,"index"],[212,23,283,19],[212,26,283,22],[212,27,283,23],[212,28,283,10],[214,0,285,10],[214,18,285,14,"action"],[214,24,285,20],[214,25,285,21,"type"],[214,29,285,14],[214,34,285,30],[214,44,285,14],[214,48,285,44,"action"],[214,54,285,50],[214,55,285,51,"payload"],[214,62,285,44],[214,63,285,59,"key"],[214,66,285,10],[214,68,285,64],[215,0,286,12,"index"],[215,16,286,12,"index"],[215,21,286,17],[215,24,286,20,"state"],[215,29,286,25],[215,30,286,26,"routes"],[215,36,286,20],[215,37,286,33,"findIndex"],[215,46,286,20],[215,47,287,14],[215,57,287,15,"route"],[215,62,287,14],[216,0,287,14],[216,25,287,25,"route"],[216,30,287,30],[216,31,287,31,"key"],[216,34,287,25],[216,39,287,39,"action"],[216,45,287,45],[216,46,287,46,"payload"],[216,53,287,39],[216,54,287,54,"key"],[216,57,287,14],[217,0,287,14],[217,17,286,20],[217,18,286,12],[218,0,289,11],[218,15,285,10],[218,21,289,17],[219,0,290,12,"index"],[219,16,290,12,"index"],[219,21,290,17],[219,24,290,20,"state"],[219,29,290,25],[219,30,290,26,"routes"],[219,36,290,20],[219,37,290,33,"findIndex"],[219,46,290,20],[219,47,291,14],[219,57,291,15,"route"],[219,62,291,14],[220,0,291,14],[220,25,291,25,"route"],[220,30,291,30],[220,31,291,31,"name"],[220,35,291,25],[220,40,291,40,"action"],[220,46,291,46],[220,47,291,47,"payload"],[220,54,291,40],[220,55,291,55,"name"],[220,59,291,14],[221,0,291,14],[221,17,290,20],[221,18,290,12],[222,0,293,11],[224,0,295,10],[224,18,295,14,"index"],[224,23,295,19],[224,28,295,24],[224,29,295,25],[224,30,295,10],[224,32,295,28],[225,0,296,12],[225,23,296,19],[225,27,296,12],[226,0,297,11],[228,0,299,10],[228,21,299,17,"changeIndex"],[228,32,299,28],[228,65,301,17,"state"],[228,70,299,28],[229,0,302,14,"routes"],[229,16,302,14,"routes"],[229,22,302,20],[229,24,303,16,"action"],[229,30,303,22],[229,31,303,23,"payload"],[229,38,303,16],[229,39,303,31,"params"],[229,45,303,16],[229,50,303,42,"undefined"],[229,59,303,16],[229,62,304,20,"state"],[229,67,304,25],[229,68,304,26,"routes"],[229,74,304,20],[229,75,304,33,"map"],[229,78,304,20],[229,79,304,37],[229,89,304,38,"route"],[229,94,304,37],[229,96,304,45,"i"],[229,97,304,37],[230,0,304,37],[230,25,305,22,"i"],[230,26,305,23],[230,31,305,28,"index"],[230,36,305,22],[230,71,307,31,"route"],[230,76,305,22],[231,0,308,28,"params"],[231,20,308,28,"params"],[231,26,308,34],[231,60,309,33,"route"],[231,65,309,38],[231,66,309,39,"params"],[231,72,308,34],[231,75,310,33,"action"],[231,81,310,39],[231,82,310,40,"payload"],[231,89,310,33],[231,90,310,48,"params"],[231,96,308,34],[232,0,305,22],[232,23,313,26,"route"],[232,28,304,37],[233,0,304,37],[233,17,304,20],[233,18,303,16],[233,21,315,20,"state"],[233,26,315,25],[233,27,315,26,"routes"],[234,0,299,28],[234,18,317,12,"index"],[234,23,299,28],[234,25,318,12,"backBehavior"],[234,37,299,28],[234,39,319,12,"initialRouteName"],[234,55,299,28],[234,56,299,10],[235,0,321,9],[237,0,323,8],[237,15,323,13],[237,24,323,8],[238,0,323,24],[239,0,324,10],[239,18,324,14,"state"],[239,23,324,19],[239,24,324,20,"history"],[239,31,324,14],[239,32,324,28,"length"],[239,38,324,14],[239,43,324,39],[239,44,324,10],[239,46,324,42],[240,0,325,12],[240,23,325,19],[240,27,325,12],[241,0,326,11],[243,0,328,10],[243,18,328,16,"previousKey"],[243,29,328,27],[243,32,328,30,"state"],[243,37,328,35],[243,38,328,36,"history"],[243,45,328,30],[243,46,328,44,"state"],[243,51,328,49],[243,52,328,50,"history"],[243,59,328,44],[243,60,328,58,"length"],[243,66,328,44],[243,69,328,67],[243,70,328,30],[243,72,328,70,"key"],[243,75,328,10],[245,0,329,10],[245,18,329,16,"index"],[245,24,329,21],[245,27,329,24,"state"],[245,32,329,29],[245,33,329,30,"routes"],[245,39,329,24],[245,40,329,37,"findIndex"],[245,49,329,24],[245,50,330,12],[245,60,330,13,"route"],[245,65,330,12],[246,0,330,12],[246,23,330,23,"route"],[246,28,330,28],[246,29,330,29,"key"],[246,32,330,23],[246,37,330,37,"previousKey"],[246,48,330,12],[247,0,330,12],[247,15,329,24],[247,16,329,10],[249,0,333,10],[249,18,333,14,"index"],[249,24,333,19],[249,29,333,24],[249,30,333,25],[249,31,333,10],[249,33,333,28],[250,0,334,12],[250,23,334,19],[250,27,334,12],[251,0,335,11],[253,0,337,10],[253,53,338,15,"state"],[253,58,337,10],[254,0,339,12,"history"],[254,16,339,12,"history"],[254,23,339,19],[254,25,339,21,"state"],[254,30,339,26],[254,31,339,27,"history"],[254,38,339,21],[254,39,339,35,"slice"],[254,44,339,21],[254,45,339,41],[254,46,339,21],[254,48,339,44],[254,49,339,45],[254,50,339,21],[254,51,337,10],[255,0,340,12,"index"],[255,16,340,12,"index"],[255,21,340,17],[255,23,340,12,"index"],[256,0,337,10],[257,0,342,9],[259,0,344,8],[260,0,345,10],[260,19,345,17,"BaseRouter"],[260,39,345,28,"getStateForAction"],[260,56,345,17],[260,57,345,46,"state"],[260,62,345,17],[260,64,345,53,"action"],[260,70,345,17],[260,71,345,10],[261,0,280,6],[262,0,347,5],[262,7,132,3],[263,0,349,4,"shouldActionChangeFocus"],[263,6,349,4,"shouldActionChangeFocus"],[263,29,132,3],[263,64,349,28,"action"],[263,70,132,3],[263,72,349,36],[264,0,350,6],[264,15,350,13,"action"],[264,21,350,19],[264,22,350,20,"type"],[264,26,350,13],[264,31,350,29],[264,41,350,6],[265,0,351,5],[265,7,132,3],[266,0,353,4,"actionCreators"],[266,6,353,4,"actionCreators"],[266,20,353,18],[266,22,353,20,"TabActions"],[267,0,132,3],[267,6,129,2],[269,0,356,2],[269,11,356,9,"router"],[269,17,356,2],[270,0,357,1]],"functionMap":{"names":["<global>","TabActions.jumpTo","getRouteHistory","routes.findIndex$argument_0","changeIndex","state.history.filter$argument_0","TabRouter","router.getInitialState","routeNames.map$argument_0","router.getRehydratedState","routes.find$argument_0","<anonymous>","router.getStateForRouteNamesChange","state.routes.find$argument_0","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","router.shouldActionChangeFocus"],"mappings":"AAA;ECqD;GDE;wBEG;QCiB,0CD;CFiB;oBIE;cCY,6DD;CJgB;eME;ICY;oCCM;QDI;KDkB;IGE;oCDO;UEE,sBF;OCoB;0CEY;oBDC,uBC,CF;KHqB;IME;QJE;4BKC,sBL;WII;yCPQ;oBKC,uBL,CO;KNmB;IQE;2CCC,oBD;KRO;IUE;cDQ,2CC;cDI,6CC;qCCa;+BDS;YDiB,oCC;KViB;IYE;KZE;CNM"}},"type":"js/module"}]}