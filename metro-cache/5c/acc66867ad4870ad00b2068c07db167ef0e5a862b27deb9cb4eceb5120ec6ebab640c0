{"dependencies":[{"name":"../constants/authConstants","data":{"isAsync":false}},{"name":"../services/auth.services","data":{"isAsync":false}},{"name":"../actions/user.actions","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.authActions = void 0;\n\n  var _authConstants = _$$_REQUIRE(_dependencyMap[0], \"../constants/authConstants\");\n\n  var _auth = _$$_REQUIRE(_dependencyMap[1], \"../services/auth.services\");\n\n  var _user = _$$_REQUIRE(_dependencyMap[2], \"../actions/user.actions\");\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"react-native\");\n\n  var authActions = {\n    login: login,\n    resetPassword: resetPassword,\n    getUserToken: getUserToken,\n    saveUserToken: saveUserToken,\n    deleteUserToken: deleteUserToken,\n    clearLoginErrors: clearLoginErrors\n  };\n  exports.authActions = authActions;\n\n  function login(username, password) {\n    return function (dispatch) {\n      dispatch(request(username));\n\n      _auth.authService.login(username, password).then(function (res) {\n        if (res.status == 200) {\n          dispatch(success(res.data.token));\n          dispatch(saveUserToken(res.data.token));\n        } else {\n          dispatch(failure(res.error));\n        }\n      });\n    };\n\n    function request(user) {\n      return {\n        type: _authConstants.authConstants.LOGIN_REQUEST\n      };\n    }\n\n    function success(token) {\n      return {\n        type: _authConstants.authConstants.LOGIN_SUCCESS,\n        token: token\n      };\n    }\n\n    function failure(error) {\n      return {\n        type: _authConstants.authConstants.LOGIN_FAILURE,\n        error: error\n      };\n    }\n\n    function saveToken() {\n      return {\n        type: _authConstants.authConstants.SAVE_TOKEN\n      };\n    }\n  }\n\n  function resetPassword(email) {\n    return function (dispatch) {\n      dispatch(request(email));\n\n      _auth.authService.resetPassword(email).then(function (res) {\n        if (res.status == 200) {\n          console.log(\"email sent\");\n          dispatch(success(\"Your reset link has been sent to \" + email));\n        } else {\n          console.log(\"reset failed\");\n          dispatch(failure());\n        }\n      });\n    };\n\n    function request() {\n      return {\n        type: _authConstants.authConstants.FORGOTPASSWORD_REQUEST\n      };\n    }\n\n    function success(msg) {\n      return {\n        type: _authConstants.authConstants.FORGOTPASSWORD_SUCCESS,\n        toastMessage: msg\n      };\n    }\n\n    function failure(error) {\n      return {\n        type: _authConstants.authConstants.FORGOTPASSWORD_FAILURE\n      };\n    }\n  }\n\n  function getUserToken() {\n    return function (dispatch) {\n      _auth.authService.getItem(\"token\").then(function (value) {\n        dispatch(getToken(value));\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    function getToken(token) {\n      return {\n        type: _authConstants.authConstants.GET_TOKEN,\n        token: token\n      };\n    }\n  }\n\n  function saveUserToken(token) {\n    return function (dispatch) {\n      _auth.authService.saveItem(\"token\", token).then(function (token) {\n        console.log(\"saved in memory\");\n      });\n    };\n\n    function saveToken(token) {\n      return {\n        type: _authConstants.authConstants.SAVE_TOKEN,\n        token: token\n      };\n    }\n  }\n\n  function deleteUserToken() {\n    return function (dispatch) {\n      _auth.authService.deleteItem(\"token\").then(function (value) {\n        dispatch(deleteToken());\n      });\n    };\n\n    function deleteToken() {\n      return {\n        type: _authConstants.authConstants.DELETE_TOKEN\n      };\n    }\n  }\n\n  function clearLoginErrors() {\n    return {\n      type: _authConstants.authConstants.CLEAR_LOGIN_ERRORS\n    };\n  }\n\n  function clearToastMessage() {\n    return {\n      type: _authConstants.authConstants.CLEAR_TOAST\n    };\n  }\n});","lineCount":158,"map":[[7,0,1,0],[9,0,2,0],[11,0,3,0],[13,0,4,0],[15,0,6,7],[15,6,6,13,"authActions"],[15,17,6,24],[15,20,6,27],[16,0,7,2,"login"],[16,4,7,2,"login"],[16,9,7,7],[16,11,7,2,"login"],[16,16,6,27],[17,0,8,2,"resetPassword"],[17,4,8,2,"resetPassword"],[17,17,8,15],[17,19,8,2,"resetPassword"],[17,32,6,27],[18,0,9,2,"getUserToken"],[18,4,9,2,"getUserToken"],[18,16,9,14],[18,18,9,2,"getUserToken"],[18,30,6,27],[19,0,10,2,"saveUserToken"],[19,4,10,2,"saveUserToken"],[19,17,10,15],[19,19,10,2,"saveUserToken"],[19,32,6,27],[20,0,11,2,"deleteUserToken"],[20,4,11,2,"deleteUserToken"],[20,19,11,17],[20,21,11,2,"deleteUserToken"],[20,36,6,27],[21,0,12,2,"clearLoginErrors"],[21,4,12,2,"clearLoginErrors"],[21,20,12,18],[21,22,12,2,"clearLoginErrors"],[22,0,6,27],[22,3,6,7],[25,0,17,0],[25,11,17,9,"login"],[25,16,17,0],[25,17,17,15,"username"],[25,25,17,0],[25,27,17,25,"password"],[25,35,17,0],[25,37,17,35],[26,0,18,2],[26,11,18,9],[26,21,18,10,"dispatch"],[26,29,18,9],[26,31,18,23],[27,0,19,4,"dispatch"],[27,6,19,4,"dispatch"],[27,14,19,12],[27,15,19,13,"request"],[27,22,19,20],[27,23,19,21,"username"],[27,31,19,20],[27,32,19,12],[27,33,19,4],[29,0,21,4,"authService"],[29,24,22,7,"login"],[29,29,21,4],[29,30,22,13,"username"],[29,38,21,4],[29,40,22,23,"password"],[29,48,21,4],[29,50,23,7,"then"],[29,54,21,4],[29,55,23,12],[29,65,23,13,"res"],[29,68,23,12],[29,70,23,21],[30,0,25,8],[30,12,25,11,"res"],[30,15,25,14],[30,16,25,15,"status"],[30,22,25,11],[30,26,25,25],[30,29,25,8],[30,31,25,29],[31,0,27,10,"dispatch"],[31,10,27,10,"dispatch"],[31,18,27,18],[31,19,27,19,"success"],[31,26,27,26],[31,27,27,27,"res"],[31,30,27,30],[31,31,27,31,"data"],[31,35,27,27],[31,36,27,36,"token"],[31,41,27,26],[31,42,27,18],[31,43,27,10],[32,0,28,10,"dispatch"],[32,10,28,10,"dispatch"],[32,18,28,18],[32,19,28,19,"saveUserToken"],[32,32,28,32],[32,33,28,33,"res"],[32,36,28,36],[32,37,28,37,"data"],[32,41,28,33],[32,42,28,42,"token"],[32,47,28,32],[32,48,28,18],[32,49,28,10],[33,0,29,9],[33,9,25,8],[33,15,29,14],[34,0,30,10,"dispatch"],[34,10,30,10,"dispatch"],[34,18,30,18],[34,19,30,19,"failure"],[34,26,30,26],[34,27,30,27,"res"],[34,30,30,30],[34,31,30,31,"error"],[34,36,30,26],[34,37,30,18],[34,38,30,10],[35,0,31,9],[36,0,34,7],[36,7,21,4],[37,0,36,3],[37,5,18,2],[39,0,38,2],[39,13,38,11,"request"],[39,20,38,2],[39,21,38,19,"user"],[39,25,38,2],[39,27,38,25],[40,0,39,4],[40,13,39,11],[41,0,39,13,"type"],[41,8,39,13,"type"],[41,12,39,17],[41,14,39,19,"authConstants"],[41,43,39,33,"LOGIN_REQUEST"],[42,0,39,11],[42,7,39,4],[43,0,40,3],[45,0,41,2],[45,13,41,11,"success"],[45,20,41,2],[45,21,41,19,"token"],[45,26,41,2],[45,28,41,26],[46,0,42,4],[46,13,42,11],[47,0,42,13,"type"],[47,8,42,13,"type"],[47,12,42,17],[47,14,42,19,"authConstants"],[47,43,42,33,"LOGIN_SUCCESS"],[47,56,42,11],[48,0,42,48,"token"],[48,8,42,48,"token"],[48,13,42,53],[48,15,42,48,"token"],[49,0,42,11],[49,7,42,4],[50,0,43,3],[52,0,44,2],[52,13,44,11,"failure"],[52,20,44,2],[52,21,44,19,"error"],[52,26,44,2],[52,28,44,26],[53,0,45,4],[53,13,45,11],[54,0,45,13,"type"],[54,8,45,13,"type"],[54,12,45,17],[54,14,45,19,"authConstants"],[54,43,45,33,"LOGIN_FAILURE"],[54,56,45,11],[55,0,45,48,"error"],[55,8,45,48,"error"],[55,13,45,53],[55,15,45,48,"error"],[56,0,45,11],[56,7,45,4],[57,0,46,3],[59,0,47,2],[59,13,47,11,"saveToken"],[59,22,47,2],[59,25,47,23],[60,0,48,4],[60,13,48,11],[61,0,48,13,"type"],[61,8,48,13,"type"],[61,12,48,17],[61,14,48,19,"authConstants"],[61,43,48,33,"SAVE_TOKEN"],[62,0,48,11],[62,7,48,4],[63,0,49,3],[64,0,50,1],[66,0,52,0],[66,11,52,9,"resetPassword"],[66,24,52,0],[66,25,52,23,"email"],[66,30,52,0],[66,32,52,30],[67,0,53,2],[67,11,53,9],[67,21,53,10,"dispatch"],[67,29,53,9],[67,31,53,23],[68,0,54,4,"dispatch"],[68,6,54,4,"dispatch"],[68,14,54,12],[68,15,54,13,"request"],[68,22,54,20],[68,23,54,21,"email"],[68,28,54,20],[68,29,54,12],[68,30,54,4],[70,0,56,4,"authService"],[70,24,57,7,"resetPassword"],[70,37,56,4],[70,38,57,21,"email"],[70,43,56,4],[70,45,58,7,"then"],[70,49,56,4],[70,50,58,12],[70,60,58,13,"res"],[70,63,58,12],[70,65,58,21],[71,0,60,8],[71,12,60,11,"res"],[71,15,60,14],[71,16,60,15,"status"],[71,22,60,11],[71,26,60,25],[71,29,60,8],[71,31,60,29],[72,0,62,10,"console"],[72,10,62,10,"console"],[72,17,62,17],[72,18,62,18,"log"],[72,21,62,10],[72,22,62,22],[72,34,62,10],[73,0,63,10,"dispatch"],[73,10,63,10,"dispatch"],[73,18,63,18],[73,19,63,19,"success"],[73,26,63,26],[73,65,63,63,"email"],[73,70,63,26],[73,71,63,18],[73,72,63,10],[74,0,64,9],[74,9,60,8],[74,15,64,14],[75,0,65,10,"console"],[75,10,65,10,"console"],[75,17,65,17],[75,18,65,18,"log"],[75,21,65,10],[75,22,65,22],[75,36,65,10],[76,0,66,10,"dispatch"],[76,10,66,10,"dispatch"],[76,18,66,18],[76,19,66,19,"failure"],[76,26,66,26],[76,28,66,18],[76,29,66,10],[77,0,67,9],[78,0,70,7],[78,7,56,4],[79,0,72,3],[79,5,53,2],[81,0,74,2],[81,13,74,11,"request"],[81,20,74,2],[81,23,74,21],[82,0,75,4],[82,13,75,11],[83,0,75,13,"type"],[83,8,75,13,"type"],[83,12,75,17],[83,14,75,19,"authConstants"],[83,43,75,33,"FORGOTPASSWORD_REQUEST"],[84,0,75,11],[84,7,75,4],[85,0,76,3],[87,0,77,2],[87,13,77,11,"success"],[87,20,77,2],[87,21,77,19,"msg"],[87,24,77,2],[87,26,77,24],[88,0,78,4],[88,13,78,11],[89,0,78,13,"type"],[89,8,78,13,"type"],[89,12,78,17],[89,14,78,19,"authConstants"],[89,43,78,33,"FORGOTPASSWORD_SUCCESS"],[89,65,78,11],[90,0,78,57,"toastMessage"],[90,8,78,57,"toastMessage"],[90,20,78,69],[90,22,78,71,"msg"],[91,0,78,11],[91,7,78,4],[92,0,79,3],[94,0,80,2],[94,13,80,11,"failure"],[94,20,80,2],[94,21,80,19,"error"],[94,26,80,2],[94,28,80,26],[95,0,81,4],[95,13,81,11],[96,0,81,13,"type"],[96,8,81,13,"type"],[96,12,81,17],[96,14,81,19,"authConstants"],[96,43,81,33,"FORGOTPASSWORD_FAILURE"],[97,0,81,11],[97,7,81,4],[98,0,82,3],[99,0,84,1],[101,0,86,0],[101,11,86,9,"getUserToken"],[101,23,86,0],[101,26,86,24],[102,0,87,2],[102,11,87,9],[102,21,87,10,"dispatch"],[102,29,87,9],[102,31,87,23],[103,0,88,4,"authService"],[103,24,89,7,"getItem"],[103,31,88,4],[103,32,89,15],[103,39,88,4],[103,41,90,7,"then"],[103,45,88,4],[103,46,90,12],[103,56,90,13,"value"],[103,61,90,12],[103,63,90,23],[104,0,91,8,"dispatch"],[104,8,91,8,"dispatch"],[104,16,91,16],[104,17,91,17,"getToken"],[104,25,91,25],[104,26,91,26,"value"],[104,31,91,25],[104,32,91,16],[104,33,91,8],[105,0,92,7],[105,7,88,4],[105,9,93,7,"catch"],[105,14,88,4],[105,15,93,13],[105,25,93,14,"err"],[105,28,93,13],[105,30,93,22],[106,0,94,8,"console"],[106,8,94,8,"console"],[106,15,94,15],[106,16,94,16,"log"],[106,19,94,8],[106,20,94,20,"err"],[106,23,94,8],[107,0,95,7],[107,7,88,4],[108,0,96,3],[108,5,87,2],[110,0,98,2],[110,13,98,11,"getToken"],[110,21,98,2],[110,22,98,20,"token"],[110,27,98,2],[110,29,98,27],[111,0,99,4],[111,13,99,11],[112,0,99,13,"type"],[112,8,99,13,"type"],[112,12,99,17],[112,14,99,19,"authConstants"],[112,43,99,33,"GET_TOKEN"],[112,52,99,11],[113,0,99,44,"token"],[113,8,99,44,"token"],[113,13,99,49],[113,15,99,44,"token"],[114,0,99,11],[114,7,99,4],[115,0,100,3],[116,0,101,1],[118,0,103,0],[118,11,103,9,"saveUserToken"],[118,24,103,0],[118,25,103,23,"token"],[118,30,103,0],[118,32,103,30],[119,0,104,2],[119,11,104,9],[119,21,104,10,"dispatch"],[119,29,104,9],[119,31,104,23],[120,0,105,4,"authService"],[120,24,105,16,"saveItem"],[120,32,105,4],[120,33,105,25],[120,40,105,4],[120,42,105,34,"token"],[120,47,105,4],[120,49,105,41,"then"],[120,53,105,4],[120,54,105,46],[120,64,105,47,"token"],[120,69,105,46],[120,71,105,57],[121,0,106,5,"console"],[121,8,106,5,"console"],[121,15,106,12],[121,16,106,13,"log"],[121,19,106,5],[121,20,106,17],[121,37,106,5],[122,0,107,5],[122,7,105,4],[123,0,108,3],[123,5,104,2],[125,0,110,2],[125,13,110,11,"saveToken"],[125,22,110,2],[125,23,110,21,"token"],[125,28,110,2],[125,30,110,28],[126,0,111,4],[126,13,111,11],[127,0,111,13,"type"],[127,8,111,13,"type"],[127,12,111,17],[127,14,111,19,"authConstants"],[127,43,111,33,"SAVE_TOKEN"],[127,53,111,11],[128,0,111,45,"token"],[128,8,111,45,"token"],[128,13,111,50],[128,15,111,45,"token"],[129,0,111,11],[129,7,111,4],[130,0,112,3],[131,0,113,1],[133,0,117,0],[133,11,117,9,"deleteUserToken"],[133,26,117,0],[133,29,117,27],[134,0,118,2],[134,11,118,9],[134,21,118,10,"dispatch"],[134,29,118,9],[134,31,118,23],[135,0,119,4,"authService"],[135,24,119,16,"deleteItem"],[135,34,119,4],[135,35,119,27],[135,42,119,4],[135,44,119,36,"then"],[135,48,119,4],[135,49,119,41],[135,59,119,42,"value"],[135,64,119,41],[135,66,119,52],[136,0,120,6,"dispatch"],[136,8,120,6,"dispatch"],[136,16,120,14],[136,17,120,15,"deleteToken"],[136,28,120,26],[136,30,120,14],[136,31,120,6],[137,0,121,5],[137,7,119,4],[138,0,122,3],[138,5,118,2],[140,0,124,2],[140,13,124,11,"deleteToken"],[140,24,124,2],[140,27,124,25],[141,0,125,4],[141,13,125,11],[142,0,125,13,"type"],[142,8,125,13,"type"],[142,12,125,17],[142,14,125,19,"authConstants"],[142,43,125,33,"DELETE_TOKEN"],[143,0,125,11],[143,7,125,4],[144,0,126,3],[145,0,127,1],[147,0,129,0],[147,11,129,9,"clearLoginErrors"],[147,27,129,0],[147,30,129,28],[148,0,130,2],[148,11,130,9],[149,0,131,4,"type"],[149,6,131,4,"type"],[149,10,131,8],[149,12,131,10,"authConstants"],[149,41,131,24,"CLEAR_LOGIN_ERRORS"],[150,0,130,9],[150,5,130,2],[151,0,133,1],[153,0,135,0],[153,11,135,9,"clearToastMessage"],[153,28,135,0],[153,31,135,29],[154,0,136,2],[154,11,136,9],[155,0,137,4,"type"],[155,6,137,4,"type"],[155,10,137,8],[155,12,137,10,"authConstants"],[155,41,137,24,"CLEAR_TOAST"],[156,0,136,9],[156,5,136,2],[157,0,139,1]],"functionMap":{"names":["<global>","login","<anonymous>","authService.login.then$argument_0","request","success","failure","saveToken","resetPassword","authService.resetPassword.then$argument_0","getUserToken","authService.getItem.then$argument_0","authService.getItem.then._catch$argument_0","getToken","saveUserToken","authService.saveItem.then$argument_0","deleteUserToken","authService.deleteItem.then$argument_0","deleteToken","clearLoginErrors","clearToastMessage"],"mappings":"AAA;ACgB;SCC;YCK;ODW;GDE;EGE;GHE;EIC;GJE;EKC;GLE;EMC;GNE;CDC;AQE;SNC;YOK;OPY;GME;EJE;GIE;EHC;GGE;EFC;GEE;CRE;AUE;SRC;YSG;OTE;aUC;OVE;GQC;EGE;GHE;CVC;AcE;SZC;8CaC;KbE;GYC;EPE;GOE;CdC;AgBI;SdC;yCeC;KfE;GcC;EEE;GFE;ChBC;AmBE;CnBI;AoBE;CpBI"}},"type":"js/module"}]}